%!PS-Adobe-2.0
%%Creator: dvips(k) 5.78 Copyright 1998 Radical Eye Software (www.radicaleye.com)
%%Title: notes.dvi
%%Pages: 29
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Roman Times-Bold Times-Italic Helvetica-Bold
%%+ Courier-Bold
%%EndComments
%DVIPSCommandLine: dvips notes
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2000.01.19:1752
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 2 string 0 1 255{IE S dup 360 add 36 4 index cvrs cvn
put}for pop 65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley
X /rulex X V}B /V{}B /RV statusdict begin /product where{pop false[
(Display)(NeXT)(LaserWriter 16/600)]{dup length product length le{dup
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont cvx]cvx def}def /ObliqueSlant
{dup sin S cos div neg}B /SlantFont{4 index mul add}def /ExtendFont{3 -1
roll mul exch}def /ReEncodeFont{/Encoding exch def}def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (notes.dvi)
@start /Fa 139[33 39 2[55 50 55 83 28 55 1[28 3[44 3[50
23[39 78 72[{ TeXBase1Encoding ReEncodeFont }13 99.6264
/Times-Bold rf
%DVIPSBitmapFont: Fb cmtt8 8 4
/Fb 4 111 df<1318133C137CA213FC120112031207127F12FFA2137C127C1200B3A638
7FFFFC14FEA314FC172A7AA923>49 D<EB7FC03803FFF04813FC001F7F48EBFF80EA7F80
397E003FC000FEEB0FE04813076CEB03F0A31401127C1238C7FC1403A2EC07E0A2EC0FC0
141FEC3F80150014FE1301EB03F8495A495AEB3FC0495A01FEC7FC485A485AD80FF013E0
391FE001F0EA3F8048B5FCB6FCA36C14E01C2A7DA923>I<EB7FC03801FFF0000713FC48
7F487F393FE07F809038801FC0140F1407A3EA0E00C7120FA2EC1F80143F903801FF00EB
7FFE495A5C806DB4FC9038007F80EC1FC0EC0FE01407EC03F0A21401A2127C12FE1403A2
EC07E048130F6CEB1FC0387FC07F6CB512806C14006C13FC00035B38007FC01C2B7DA923
>I<38FF81FCEBC7FF01DF138090B512C0A23907FE0FE0EBF807EBF00313E0A313C0AD39
FFFE1FFF5CA380201D7F9C23>110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi10 10.95 2
/Fc 2 84 df<EC1FF0903801FFFC010713FF011F14C090397FC01FE09038FC0007D801F0
1301D803C090C7FC485AA290C9FC5A120EA2120F7E7F3803CFFF6CB57E023FC7FC3803DF
FE380780E0000EC9FC5A123C5A127012F05AA515066C140E5D00785C007C14F0393F8007
E06CB55A000791C7FC000113FC38007FE0232B7DA82A>34 D<DB07FC131C92383FFF8092
B5EAE038913A03F803F078913A0FE000F8F8DA1F80133D4AC7EA1FF0027E140F5C494814
074A15E0130349481403A2010F16C05CA3011F1680A38094C7FC808014FE90380FFFC015
FC6DEBFFC016F86D14FE6D806D81023F800207801400030F7F1500163F707E160F1607A2
160312075A5F120EA2001E15075FA24C5A123E003F4B5AA26D4AC7FC007F157E6D5C6D49
5AD87DF0495AD8F8FCEB0FE090393F803F8027F01FFFFEC8FCD8E00713F839C0007FC036
427BBF38>83 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy10 10.95 5
/Fd 5 104 df<007FB812FEBAFCA26C17FE3804799847>0 D<EB0FFCEB3FFF90B512C000
0314F04880488048804880A2481580A3B712C0AA6C1580A36C1500A26C5C6C5C6C5C6C5C
C614C0013F90C7FCEB0FFC22227BA72D>15 D<19301978A2197C193CA2193E191EA2191F
737EA2737E737EA2737E737E1A7C1A7EF21F80F20FC0F207F0007FBB12FCBDFCA26C1AFC
CDEA07F0F20FC0F21F80F27E001A7C624F5A4F5AA24F5A4F5AA24FC7FC191EA2193E193C
A2197C1978A2193050307BAE5B>33 D<153FEC03FFEC0FE0EC3F80EC7E00495A5C495AA2
495AB3AA130F5C131F495A91C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE133F
806D7E130F801307B3AA6D7EA26D7E80EB007EEC3F80EC0FE0EC03FFEC003F205B7AC32D
>102 D<12FCEAFFC0EA07F0EA01FCEA007E6D7E131F6D7EA26D7EB3AA801303806D7E13
00147FEC1FC0EC07FEEC00FFEC07FEEC1FC0EC7F0014FC1301495A5C13075CB3AA495AA2
495A133F017EC7FC485AEA07F0EAFFC000FCC8FC205B7AC32D>I
E
%EndDVIPSBitmapFont
/Fe 133[35 40 40 61 40 45 25 35 35 45 45 45 45 66 25
40 25 25 45 45 25 40 45 40 45 45 12[51 3[56 7[66 1[56
2[61 8[30 11[23 30 23 41[45 2[{ TeXBase1Encoding ReEncodeFont }36
90.9091 /Times-Italic rf
%DVIPSBitmapFont: Ff cmtt10 10.95 77
/Ff 77 125 df<00101304007C131F00FEEB3F80A26C137FA248133FB2007E1400007C7F
003C131E00101304191C75B830>34 D<EB07E0EB1FF8497E137F497E803801FC7F497E81
0003131F13F0A6143F92C8FC91387F0FFF9026F87E1F1380000113FEEBF9FC13FB4A6C13
00D9FFF013C06C13E0151F02C05BEB7F809038FF003F4892C7FC485C48EB807E5A15FE39
1FDFC0FC383F8FE014E1397F07F1F8EB03F300FEEBFBF0EB01FF5D7FEDC006027F130F91
393F801F8015C06C137F6CEBFFE049EBF83F018701FC1300263FFFFBB5FC6C01F15B14E0
6C9038C03FFC00039038001FF8D801FCEB07E0293A7DB830>38 D<EA07C0EA0FF0EA1FF8
A213FCA213FE120F1207EA007EA513FE13FCA2120113F81203EA07F0120FEA1FE0127FEA
FFC013801300127C12380F1D70B730>I<141E147F14FF5BEB03FEEB07FCEB0FF0EB1FE0
EB3FC0EB7F80EBFF00485A5B12035B485A120F5BA2485AA2123F5BA2127F90C7FCA412FE
AD127FA47F123FA27F121FA26C7EA27F12076C7E7F12017F6C7EEB7F80EB3FC0EB1FE0EB
0FF0EB07FCEB03FEEB01FF7F147F141E184771BE30>I<127812FE7E7F6C7E6C7EEA0FF0
6C7E6C7E6C7E6C7EEB7F80133F14C0131FEB0FE014F01307A2EB03F8A214FC1301A214FE
1300A4147FAD14FEA4130114FCA2130314F8A2EB07F0A2130F14E0EB1FC0133F1480137F
EBFF00485A485A485A485AEA3FE0485A485A90C7FC5A1278184778BE30>I<14E0497E49
7EA60038EC0380007EEC0FC0D8FF83EB3FE001C3137F9038F3F9FF267FFBFB13C06CB612
80000FECFE00000314F86C5C6C6C13C0011F90C7FC017F13C048B512F04880000F14FE00
3FECFF80267FFBFB13C026FFF3F913E09038C3F87F0183133FD87E03EB0FC00038EC0380
000091C7FCA66D5A6D5A23277AAE30>I<143EA2147FAF007FB7FCA2B81280A36C1600A2
C76CC8FCAF143EA229297DAF30>I<EA03E0EA0FF0EA1FF813FCEA3FFEA213FFA27EA27E
1203EA007FA2137E13FEEA01FC1203EA07F8EA3FF0127FEAFFE0EA7F801300123C101970
8B30>I<007FB612F0A2B712F8A36C15F0A225077B9E30>I<120FEA3FC0EA7FE0A2EAFFF0
A4EA7FE0A2EA3FC0EA0F000C0C6E8B30>I<16F01501ED03F8A21507A2ED0FF0A2ED1FE0
A2ED3FC0A2ED7F80A2EDFF00A24A5AA25D1403A24A5AA24A5AA24A5AA24A5AA24A5AA24A
C7FCA2495AA25C1303A2495AA2495AA2495AA2495AA2495AA249C8FCA2485AA25B1203A2
485AA2485AA2485AA2485AA2485AA248C9FCA25AA2127CA225477BBE30>I<14FE903807
FFC0497F013F13F8497F90B57E48EB83FF4848C6138049137F4848EB3FC04848EB1FE049
130F001F15F0491307A24848EB03F8A290C712014815FCA400FEEC00FEAD6C14016C15FC
A36D1303003F15F8A26D1307001F15F0A26D130F6C6CEB1FE0A26C6CEB3FC06C6CEB7F80
6D13FF2601FF8313006CEBFFFE6D5B6D5B010F13E06D5BD900FEC7FC273A7CB830>I<EB
03C0497EA2130FA2131FA2133F137F13FF1203123FB5FCA213EF138FEA7E0F1200B3B000
3FB512F84814FCB612FEA26C14FC6C14F81F3977B830>I<EB07FC90383FFFC090B512F0
0003804814FE4880261FF80F1380263FE00113C09038C0007F4848EB3FE090C7121FED0F
F04814075A6C15F81503A3127E1218C8FCA2150716F0150F16E0151F16C0153FED7F8015
FF4A13005DEC07FC4A5A4A5A4A5A4A5A4A5A4990C7FC495A495AEB0FF0EB3FE0495A495A
4890C8FC4848EB01F04848EB03F8485AEA1FE048B6FCB7FCA37E6C15F025397BB830>I<
EB03FF013F13E090B512F84814FE4880481580260FFE0113C09038F0007F4848EB1FE015
0F16F01507A26C5A6C5AC8FC150F16E0A2151FED3FC0157FEDFF8002071300903807FFFE
495B5D8115FF6D1480D9000113C09138003FE0ED1FF0ED07F8150316FC150116FE1500A2
1218127EB4FCA2150116FC4814036C15F86C6C13076DEB1FF0D83FF0133F3A1FFE01FFE0
6CB612C06C15806CECFE00C65C013F13F001031380273A7CB830>I<EC03FC4A7E140F14
1FA2143F147F157E14FEA2EB01FCEB03F8A2EB07F0A2EB0FE0EB1FC0A2EB3F80A2EB7F00
13FEA2485A485AA2485AA2485A485AA2485AA248C7FC12FEB8FC1780A46C1600C8007EC7
FCAA91387FFFFE91B6FCA46E5B29397DB830>I<000FB612804815C05AA316800180C8FC
AEEB83FF019F13C090B512F015FC8181D9FE0313809039F0007FC049133F0180EB1FE06C
C7120F000E15F0C81207A216F81503A31218127EA2B4FC150716F048140F6C15E06C141F
6DEB3FC06D137F3A3FE001FF80261FFC0F13006CB55A6C5C6C5C6C14E06C6C1380D90FFC
C7FC25397BB730>I<EC0FF8EC7FFF49B51280010714E0131F4914F090387FF80F9039FF
C007F84813803803FE005B485A4848EB03F0ED01E0484890C7FC5B123F5BA2127FEB000C
903803FFE0010F13F8D8FF3F13FE48B6FCB7128016C09039FE007FE001F8EB1FF001E013
0F49EB07F8ED03FC5B90C7120116FE1500A37EA46C7E15016D14FC121F6D1303000FEC07
F86D130F6C6CEB1FF06DEB3FE03A03FF81FFC06C90B512806C15006D5B011F13F8010713
E001011380273A7CB830>I<127CB712FC16FEA416FC48C7EA0FF816F0ED1FE0007CEC3F
C0C8EA7F80EDFF00A24A5A4A5A5D14075D140F5D4A5AA24A5AA24AC7FCA25C5C13015CA2
13035CA213075CA4495AA6131F5CA96D5A6DC8FC273A7CB830>I<49B4FC011F13F0017F
13FC90B57E0003ECFF804815C048010113E03A1FF8003FF049131FD83FC0EB07F8A24848
EB03FC90C71201A56D1303003F15F86D13076C6CEB0FF06C6CEB1FE0D807FCEB7FC03A03
FF83FF806C90B512006C6C13FC011F13F0497F90B512FE48802607FE0013C0D80FF8EB3F
E0D81FE0EB0FF04848EB07F8491303007F15FC90C712014815FE481400A66C14016C15FC
6D1303003F15F86D1307D81FF0EB1FF06D133F3A0FFF01FFE06C90B512C06C1580C6ECFE
006D5B011F13F0010190C7FC273A7CB830>I<49B4FC010F13E0013F13F890B57E488048
8048010113803A0FFC007FC0D81FF0EB3FE04848131F49EB0FF048481307A290C7EA03F8
5A4815FC1501A416FEA37E7E6D130315076C7E6C6C130F6D133FD80FFC13FF6CB6FC7E6C
14FE6C14F9013FEBE1FC010F138190380060011400ED03F8A2150716F0150F000F15E048
6C131F486CEB3FC0157FEDFF804A1300EC07FE391FF01FFC90B55A6C5C6C5C6C1480C649
C7FCEB3FF0273A7CB830>I<120FEA3FC0EA7FE0A2EAFFF0A4EA7FE0A2EA3FC0EA0F00C7
FCAF120FEA3FC0EA7FE0A2EAFFF0A4EA7FE0A2EA3FC0EA0F000C276EA630>I<16F01503
ED07F8151F157FEDFFF014034A13C0021F138091383FFE00ECFFF8495B010713C0495BD9
3FFEC7FC495A3801FFF0485B000F13804890C8FCEA7FFC5BEAFFE05B7FEA7FF87FEA1FFF
6C7F000313E06C7F38007FFC6D7E90380FFF806D7F010113F06D7FEC3FFE91381FFF8002
0713C06E13F01400ED7FF8151F1507ED03F01500252F7BB230>60
D<007FB7FCA2B81280A36C16006C5DCBFCA7003FB612FE4881B81280A36C1600A229157D
A530>I<1278127EB4FC13C07FEA7FF813FEEA1FFF6C13C000037F6C13F86C6C7EEB1FFF
6D7F010313E06D7F9038007FFC6E7E91380FFF806E13C0020113F080ED3FF8151F153FED
FFF05C020713C04A138091383FFE004A5A903801FFF0495B010F13804990C7FCEB7FFC48
485A4813E0000F5B4890C8FCEA7FFE13F8EAFFE05B90C9FC127E1278252F7BB230>I<EB
1FFE90B512E0000314F8000F14FE4880481580267FF80313C09038C0007F48C7121F16E0
150FA3127E151F0018EC7FC0C812FF020313804A13004A5AEC1FF84A5AEC7FC04A5A92C7
FC495AA2495A5CA213075CA86D5A90C9FCA8EB01C0EB07F0A2497EA36D5AA2EB01C02339
7AB830>I<EC1FE0ECFFF8010313FE010F7F4914804914C090397FF03FE09038FF800F48
90380007F0D803FC13033A07F801FBF89038F007FF380FE01F4A13FCEA1FC0495A003FEB
FF0F903800FE07903901FC03FE007FEBF801EA7E03ECF000A2EAFE0700FC49137EAA00FE
6D13FED87E0314FCA2ECF801D87F0114F8003FEBFC03903900FE07F0903880FF0F001F90
387FFFE06D6C13C0EA0FE06E13803A07F007FE009038F801F86C6CC7127C6CB414FE6CEB
800390387FF01F6DB512FC6D14F86D14E0010314C00100EBFE00EC1FF0273A7CB830>I<
147F4A7EA2497FA4497F14F7A401077F14E3A3010F7FA314C1A2011F7FA490383F80FEA5
90387F007FA4498049133F90B6FCA34881A39038FC001F00038149130FA4000781491307
A2D87FFFEB7FFFB56CB51280A46C496C130029397DB830>I<007FB512F0B612FE6F7E82
826C813A03F8001FF815076F7E1501A26F7EA615015EA24B5A1507ED1FF0ED7FE090B65A
5E4BC7FC6F7E16E0829039F8000FF8ED03FC6F7E1500167FA3EE3F80A6167F1700A25E4B
5A1503ED1FFC007FB6FCB75A5E16C05E6C02FCC7FC29387EB730>I<91387F803C903903
FFF03E49EBFC7E011F13FE49EBFFFE5B9038FFE07F48EB801F3903FE000F484813075B48
481303A2484813015B123F491300A2127F90C8FC167C16005A5AAC7E7EA2167C6D14FE12
3FA27F121F6D13016C6C14FCA26C6CEB03F86D13076C6CEB0FF03901FF801F6C9038E07F
E06DB512C06D14806D1400010713FC6D13F09038007FC0273A7CB830>I<003FB512E048
14FCB67E6F7E6C816C813A03F8007FF0ED1FF8150F6F7E6F7E15016F7EA2EE7F80A2163F
17C0161FA4EE0FE0AC161F17C0A3163F1780A2167F17005E4B5A15034B5A150F4B5AED7F
F0003FB65A485DB75A93C7FC6C14FC6C14E02B387FB730>I<007FB7FCB81280A47ED803
F8C7123FA8EE1F0093C7FCA4157C15FEA490B5FCA6EBF800A4157C92C8FCA5EE07C0EE0F
E0A9007FB7FCB8FCA46C16C02B387EB730>I<003FB712804816C0B8FCA27E7ED801FCC7
121FA8EE0F8093C7FCA5153E157FA490B6FCA69038FC007FA4153E92C8FCAE383FFFF848
7FB5FCA27E6C5B2A387EB730>I<007FB6FCB71280A46C1500260007F0C7FCB3B3A8007F
B6FCB71280A46C1500213879B730>73 D<49B512F04914F85BA27F6D14F090C7EAFE00B3
B3123C127EB4FCA24A5A1403EB8007397FF01FF86CB55A5D6C5C00075C000149C7FC3800
3FF025397AB730>I<383FFFF8487FB57EA26C5B6C5BD801FCC9FCB3B0EE0F80EE1FC0A9
003FB7FC5AB8FCA27E6C16802A387EB730>76 D<D83FF8ECFFE0486C4913F0486C4913F8
A2007F16F06C6C4913E00007160001EF14BFEC800FA39039E7C01F3FA4ECE03F01E3133E
A2ECF07EA201E1137CA2ECF8FCA201E013F8A214FDEC7DF0A3147FEC3FE0A3EC1FC0A2EC
070091C7FCADD83FFC903801FFE0486C4913F0B54913F8A26C486D13F06C486D13E02D38
7FB730>I<D83FFC90381FFF80486C4913C0B54913E0A26C6D6C13C06C6E138000039138
01F800EBF7C0A3EBF3E0A314F013F1A214F8A213F014FCA2147C147EA2143E143FA2141F
A21581A2140F15C1A2140715E1A2140315F1A21401A215F91400A3157DA3153FEA3FFF48
1380B5EAC01FA26CEB800F6C496C5A2B387EB730>I<90383FFFE048B512FC000714FF48
15804815C04815E0EBF80001E0133FD87F80EB0FF0A290C71207A44815F8481403B3A96C
1407A26C15F0A36D130FA26D131F6C6CEB3FE001F813FF90B6FC6C15C06C15806C150000
0114FCD8003F13E0253A7BB830>I<007FB512F0B612FE6F7E16E0826C813903F8003FED
0FFCED03FE15016F7EA2821780163FA6167F17005EA24B5A1503ED0FFCED3FF890B6FC5E
5E16804BC7FC15F001F8C9FCB0387FFFC0B57EA46C5B29387EB730>I<003FB57E4814F0
B612FC15FF6C816C812603F8017F9138003FF0151F6F7E15071503821501A515035E1507
150F4B5A153F4AB45A90B65A5E93C7FC5D8182D9F8007FED3FE0151F150F821507A817F8
EEF1FCA53A3FFF8003FB4801C0EBFFF8B56C7E17F06C496C13E06C49EB7FC0C9EA1F002E
397FB730>82 D<90390FF803C0D97FFF13E048B512C74814F74814FF5A381FF80F383FE0
01497E4848137F90C7123F5A48141FA2150FA37EED07C06C91C7FC7F7FEA3FF0EA1FFEEB
FFF06C13FF6C14E0000114F86C80011F13FF01031480D9003F13C014019138007FE0151F
ED0FF0A2ED07F8A2007C140312FEA56C140716F07F6DEB0FE06D131F01F8EB3FC001FF13
FF91B51280160000FD5CD8FC7F13F8D8F81F5BD878011380253A7BB830>I<003FB712C0
4816E0B8FCA43AFE003F800FA8007CED07C0C791C7FCB3B1011FB5FC4980A46D91C7FC2B
387EB730>I<3B7FFFC007FFFCB56C4813FEA46C496C13FCD803F8C7EA3F80B3B16D147F
00011600A36C6C14FE6D13016D5CEC800390393FE00FF890391FF83FF06DB55A6D5C6D5C
6D91C7FC9038007FFCEC1FF02F3980B730>I<001FB612FC4815FE5AA490C7EA03FCED07
F816F0150FED1FE016C0153FED7F80003E1500C85A4A5A5D14034A5A5D140F4A5A5D143F
4A5A92C7FC5C495A5C1303495A5C130F495A5C133F495A91C8FC5B4848147C4914FE1203
485A5B120F485A5B123F485A90B6FCB7FCA46C15FC27387CB730>90
D<007FB5FCB61280A4150048C8FCB3B3B3A5B6FC1580A46C140019476DBE30>I<127CA2
12FEA27EA26C7EA26C7EA26C7EA26C7EA26C7EA26C7EA212017FA26C7EA26D7EA26D7EA2
6D7EA26D7EA26D7EA26D7EA2130180A26D7EA26E7EA26E7EA26E7EA26E7EA26E7EA26E7E
A2140181A26E7EA2ED7F80A2ED3FC0A2ED1FE0A2ED0FF0A2ED07F8A21503A2ED01F01500
25477BBE30>I<007FB5FCB61280A47EC7123FB3B3B3A5007FB5FCB6FCA46C140019477D
BE30>I<007FB612F0A2B712F8A36C15F0A225077B7D30>95 D<1338137CEA01FE120312
07EA0FFC13F0EA1FE013C0EA3F8013005A127EA212FE5AA5EAFFC013E013F0127FA2123F
A2EA1FE0EA07C00F1D70BE30>I<EB3FFC48B57E4814E04880488048809038F00FFE9038
E001FF806F7E6C48133F6C4880C8121FA491B5FC130F137F48B6FC12075A48EBC01F383F
FC00EA7FE0138048C7FC5AA46C143FA26C6C137F9038C001FF263FF80FEBFFC06CB712E0
A2000714F76C14C3C6020013C0D93FF090C7FC2B2A7CA830>I<EA3FFC487E12FFA2127F
123F1200AAEC03FE91381FFF80027F13E091B57E90B612FC82ECFE079138F001FF4A6C13
804A137F4AEB3FC091C7121F4915E0160FA217F01607A8160FA217E07F161F6EEB3FC0A2
6EEB7F806E13FFDAF00313009138FC0FFE91B55A5E495CD97E7F13C0D93C1F90C7FC9038
0003FC2C3980B730>I<ECFFE0010713FC011F7F017F7F90B612804815C048EB807F3907
FC003F485A485A49EB1F804848EB0F004990C7FC127F90C9FCA25A5AA87E7EA27F003FEC
07C06DEB0FE06C7E6D131F6C6C14C0D807FE133F9039FFC0FF806C90B5FCC615006D5B01
1F13F801075B01011380232A7AA830>I<913801FFE04A7F5CA28080EC0007AAEB03FE90
381FFF874913E790B6FC5A5A481303380FFC00D81FF0133F49131F485A150F4848130790
C7FCA25AA25AA87E6C140FA27F003F141F6D133F6C7E6D137F390FF801FF2607FE07EBFF
C06CB712E06C16F06C14F76D01C713E0011F010313C0D907FCC8FC2C397DB730>I<49B4
FC010713E0011F13F8017F7F90B57E488048018113803A07FC007FC04848133FD81FE0EB
1FE0150F484814F0491307127F90C7FCED03F85A5AB7FCA516F048C9FC7E7EA27F003FEC
01F06DEB03F86C7E6C7E6D1307D807FEEB1FF03A03FFC07FE06C90B5FC6C15C0013F1480
6DEBFE00010713F8010013C0252A7CA830>I<EDFF80020713E0021F13F05C4A13F891B5
FC491387903803FE079138FC03F0903907F800C04A1300A8003FB612C04815E0B7FCA36C
15C0260007F0C7FCB3A9003FB512FE4880B71280A26C15006C5C25397DB830>I<D903FC
13FF90261FFF8713C04913DF90B712E05A5A2607FE07138F903AF801FE07C048486C6CC7
FCA2497F001F8149133FA56D137F000F92C7FC6D5BA26C6C485AEBFE0790B55A5D485C15
C001DF5BD9C3FCC8FC01C0C9FCA37F7F6CB512F015FF6C15C04815F0488148813A3FE000
1FFE0180130148C8127F007E8100FE168048151FA56C153F007FED7F006D5C6C6C495A01
F013076CB4EB7FFC6C90B55A6C5D000115C06C6C91C7FC011F13FC010113C02B3E7DA730
>I<EA3FFC487E12FFA2127F123F1200AAEC01FE91380FFF80023F13E091B57E90B67EA2
9138FE07FCECF8039138E001FE14C0EC8000A291C7FCA25BB3A23B3FFFF81FFFF8486D48
13FCB500FE14FEA26C01FC14FC6C496C13F82F3880B730>I<14E0EB03F8A2497EA36D5A
A2EB00E091C8FCA9381FFFF8487F5AA27E7EEA0001B3A9003FB612C04815E0B7FCA27E6C
15C023397AB830>I<EC01C0EC07F0A2EC0FF8A3EC07F0A2EC01C091C7FCA990B512F048
14F8A47EEB0003B3B3A5EC07F0A2123C007EEB0FE0B4131FEC3FC0147F90B512806C1400
5C6C5B000F13F0000313C01D4E7CB830>I<EA7FF8487EA4127F1200AB0203B512804A14
C017E0A217C06E14809139001FE0004B5A4B5A4BC7FC4A5A4A5AEC0FF84A5A4A5A4A5A4A
5A01FD7F90B57E8114F7ECE3F8ECC1FCEC81FEEC00FF497F496D7E6F7E826F7E15076F7E
6F7E3B7FFFF81FFFE0B56C4813F017F8A217F06C496C13E02D387FB730>I<387FFFF8B5
7EA47EEA0001B3B3A8007FB612F0B712F8A46C15F025387BB730>I<02FC137E3B7FC3FF
01FF80D8FFEF01877F90B500CF7F15DF92B57E6C010F13872607FE07EB03F801FC13FE90
39F803FC01A201F013F8A301E013F0B3A23C7FFE0FFF07FF80B548018F13C0A46C486C01
071380322881A730>I<EC01FE3A3FFC0FFF80267FFE3F13E000FF90B57E90B67E7E6C90
38FE07FCC6EBF8039138E001FE14C0EC8000A291C7FCA25BB3A23B3FFFF81FFFF8486D48
13FCB500FE14FEA26C01FC14FC6C496C13F82F2880A730>I<49B4FC010F13E0013F13F8
497F90B57E0003ECFF8014013A07FC007FC04848EB3FE0D81FE0EB0FF0A24848EB07F849
1303007F15FC90C71201A300FEEC00FEA86C14016C15FCA26D1303003F15F86D13076D13
0F6C6CEB1FF06C6CEB3FE06D137F3A07FF01FFC06C90B512806C15006C6C13FC6D5B010F
13E0010190C7FC272A7CA830>I<EC03FE3A3FFC1FFF80267FFE7F13E000FF90B57E90B6
12FC6C816CEBFE07C69038F001FF4A6C13804A137F4AEB3FC091C7121F4915E0160FA217
F01607A8160FA217E07F161F6EEB3FC0A26EEB7F806E13FFDAF00313009138FC0FFE91B5
5A5E495C6E13C0021F90C7FCEC03FC91C9FCAD383FFFF8487FB57EA26C5B6C5B2C3C80A7
30>I<49B413F8010FEBC1FC013F13F14913FD48B6FC5A481381390FFC007F49131F4848
130F491307485A491303127F90C7FC15015A5AA77E7E15037FA26C6C1307150F6C6C131F
6C6C133F01FC137F3907FF01FF6C90B5FC6C14FD6C14F9013F13F1010F13C1903803FE01
90C7FCAD92B512F84A14FCA46E14F82E3C7DA730>I<ED07F83A3FFF803FFF486DB51280
B512C302CF14C06C13DF6C9038FFFC3FD8001F13E09238801F809238000F004A90C7FC5C
5C5CA25CA45CAF003FB512FC4880B7FCA26C5C6C5C2A287EA730>I<90381FFC1E48B512
9F000714FF5A5A5A387FF007EB800100FEC7FC4880A46C143E007F91C7FC13E06CB4FC6C
13FC6CEBFF806C14E0000114F86C6C7F01037F9038000FFF02001380007C147F00FEEC1F
C0A2150F7EA27F151F6DEB3F806D137F9039FC03FF0090B6FC5D5D00FC14F0D8F83F13C0
26780FFEC7FC222A79A830>I<EB0780497E131FA9003FB612E04815F0B7FCA36C15E026
001FC0C7FCB216F8ED01FCA5ECE003010FEB07F814F09138FC1FF06DB512E06D14C01680
6D14009038007FFCEC1FF026337EB130>I<D83FFCEB3FFC486C497E00FF14FFA2007F14
7F003F143F00001400B3A41501A2150315076D130F903A7FC07FFFF891B612FC6D15FE7F
6D4913FC6D9038F87FF8010001C0C7FC2F2880A630>I<3B3FFFC07FFF80486DB512C0B5
15E0A26C16C06C496C13803B01F80003F000A26D130700005DA26D130F017E5CA2017F13
1F6D5CA2EC803F011F91C7FCA26E5A010F137EA2ECE0FE01075BA214F101035BA3903801
FBF0A314FF6D5BA36E5A6E5A2B277EA630>I<3B3FFFC01FFFE0486D4813F0B515F8A26C
16F06C496C13E0D807E0C7EA3F00A26D5C0003157EA56D14FE00015DEC0F80EC1FC0EC3F
E0A33A00FC7FF1F8A2147DA2ECFDF9017C5C14F8A3017E13FBA290393FF07FE0A3ECE03F
A2011F5C90390F800F802D277FA630>I<3A3FFF81FFFC4801C37FB580A26C5D6C01815B
C648C66CC7FC137FEC80FE90383F81FC90381FC3F8EB0FE3ECE7F06DB45A6D5B7F6D5B92
C8FC147E147F5C497F81903803F7E0EB07E790380FE3F0ECC1F890381F81FC90383F80FE
90387F007E017E137F01FE6D7E48486D7E267FFF80B5FCB500C1148014E3A214C16C0180
140029277DA630>I<3B3FFFC07FFF80486DB512C0B515E0A26C16C06C496C13803B01FC
0003F000A2000014076D5C137E150F017F5C7F151FD91F805BA214C0010F49C7FCA214E0
0107137EA2EB03F0157C15FCEB01F85DA2EB00F9ECFDF0147D147FA26E5AA36E5AA35DA2
143F92C8FCA25C147EA2000F13FE486C5AEA3FC1EBC3F81387EB8FF0EBFFE06C5B5C6C90
C9FC6C5AEA01F02B3C7EA630>I<001FB612FC4815FE5AA316FC90C7EA0FF8ED1FF0ED3F
E0ED7FC0EDFF80003E491300C7485A4A5A4A5A4A5A4A5A4A5A4A5A4990C7FC495A495A49
5A495A495A495A4948133E4890C7127F485A485A485A485A485A48B7FCB8FCA46C15FE28
277DA630>I<127CA212FEB3B3B3AD127CA207476CBE30>124 D E
%EndDVIPSBitmapFont
/Fg 104[91 45 27[40 45 45 66 45 45 25 35 30 45 45 45
45 71 25 45 25 25 45 45 30 40 45 40 45 40 30 2[30 1[30
1[66 1[86 66 66 56 51 61 1[51 66 66 81 56 1[35 30 66
66 51 56 66 61 61 66 1[40 3[25 25 45 45 45 45 45 45 45
45 45 45 1[23 30 23 2[30 30 30 36[51 2[{ TeXBase1Encoding ReEncodeFont }
73 90.9091 /Times-Roman rf /Fh 135[45 2[51 30 35 40 1[51
45 51 76 25 2[25 51 45 30 40 51 40 1[45 12[61 51 66 3[66
86 3[35 2[56 61 66 1[61 66 7[45 45 45 45 45 45 45 45
45 45 2[30 42[51 2[{ TeXBase1Encoding ReEncodeFont }41
90.9091 /Times-Bold rf /Fi 134[60 60 2[66 40 47 53 1[66
60 66 100 33 2[33 66 60 40 53 66 53 66 60 12[80 66 86
3[86 113 3[47 2[73 80 86 86 80 86 7[60 60 60 60 60 60
60 60 60 60 2[40 42[66 2[{ TeXBase1Encoding ReEncodeFont }44
119.552 /Times-Bold rf /Fj 134[50 2[50 50 28 39 33 1[50
50 50 78 3[28 50 50 33 44 2[50 44 11[72 61 55 6[61 72
39 6[66 16[50 1[50 48[{ TeXBase1Encoding ReEncodeFont }26
99.6264 /Times-Roman rf /Fk 135[72 2[72 40 56 48 1[72
72 72 112 40 72 1[40 1[72 1[64 72 2[64 14[96 9[104 2[88
3[104 65[{ TeXBase1Encoding ReEncodeFont }20 143.462
/Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 930 937 a Fk(Re)n(gular)34 b(Expressions)f(and)i(Automata)1551
1120 y(using)g(Hask)o(ell)1587 1373 y Fj(Simon)24 b(Thompson)1485
1489 y(Computing)f(Laboratory)1288 1605 y(Uni)n(v)o(ersity)g(of)i(K)n
(ent)f(at)h(Canterb)n(ury)1676 1807 y(January)f(2000)448
2199 y Fi(Contents)448 2406 y Fh(1)92 b(Intr)n(oduction)2315
b(2)448 2610 y(2)92 b(Regular)23 b(Expr)n(essions)2011
b(2)448 2814 y(3)92 b(Matching)23 b(r)n(egular)i(expr)n(essions)1662
b(4)448 3018 y(4)92 b(Sets)2651 b(6)448 3222 y(5)92 b
(Non-deterministic)24 b(Finite)f(A)-5 b(utomata)1404
b(12)448 3425 y(6)92 b(Simulating)23 b(an)f(NF)-8 b(A)2016
b(14)448 3629 y(7)92 b(Implementing)23 b(an)g(example)1752
b(17)448 3833 y(8)92 b(Building)22 b(NF)-8 b(As)22 b(fr)n(om)i(r)n
(egular)g(expr)n(essions)1207 b(18)448 4037 y(9)92 b(Deterministic)24
b(machines)1851 b(20)448 4241 y(10)47 b(T)-7 b(ransf)n(orming)24
b(NF)-8 b(As)22 b(to)h(DF)-8 b(As)1652 b(23)448 4444
y(11)47 b(Minimising)23 b(a)g(DF)-8 b(A)2046 b(26)448
4648 y(12)47 b(Regular)23 b(de\002nitions)2022 b(27)1920
5225 y Fg(1)p eop
%%Page: 2 2
2 1 bop 448 573 a Fi(1)120 b(Intr)n(oduction)448 780
y Fg(In)23 b(these)h(notes)f(Hask)o(ell)h(is)f(used)g(as)g(a)f(v)o
(ehicle)i(to)f(introduce)i(re)o(gular)f(e)o(xpressions,)i(pattern)448
893 y(matching,)f(and)e(their)h(implementations)i(by)d(means)g(of)g
(non-deterministic)k(and)d(determin-)448 1006 y(istic)h(automata.)589
1119 y(As)e(part)i(of)e(the)h(material,)h(we)e(gi)n(v)o(e)h(an)g
(implementation)i(of)e(the)g(ideas,)h(contained)h(in)e(a)448
1231 y(set)g(of)g(\002les.)k(References)e(to)d(this)h(material)h(are)e
(scattered)j(through)g(the)e(te)o(xt.)29 b(The)23 b(\002les)g(can)448
1344 y(be)h(obtained)i(by)d(follo)n(wing)i(the)f(instructions)j(in)448
1532 y Ff(http://www.cs.ukc.ac.uk/p)o(eopl)o(e/st)o(aff)o(/sjt)o(/Fur)o
(the)o(r/re)o(gExp)o(.ht)o(ml)448 1769 y Fg(This)e(material)g(is)f
(based)i(on)e(the)h(treatment)h(of)e(the)h(subject)h(in)e([Aho)g
Fe(et.)g(al.)p Fg(],)g(b)n(ut)h(pro)o(vides)448 1882
y(full)f(implementations)j(rather)e(than)f(their)g(pseudo-code)k(v)o
(ersions)d(of)e(the)h(algorithms.)589 1995 y(The)30 b(material)i(gi)n
(v)o(es)f(an)f(illustration)k(of)c(man)o(y)g(of)g(the)h(features)h(of)f
(Hask)o(ell,)i(includ-)448 2108 y(ing)38 b(polymorphism)i(\(the)e
(states)h(of)e(an)h(NF)-7 b(A)36 b(can)i(be)f(represented)k(by)d
(objects)h(of)e(an)o(y)448 2221 y(type\);)k(type)35 b(classes)g(\(in)g
(practice)g(the)g(states)g(need)g(to)f(ha)n(v)o(e)g(equality)j(and)d
(an)g(ordering)448 2334 y(de\002ned)23 b(on)f(them\);)h(modularisation)
i(\(the)d(system)h(is)e(split)i(across)g(a)e(number)i(of)e(modules\);)
448 2447 y(higher)n(-order)28 b(functions)f(\(used)e(in)f(\002nding)i
(limits)e(of)g(processes,)j(for)d(e)o(xample\))i(and)e(other)448
2560 y(features.)31 b(A)22 b(tutorial)k(introduction)h(to)c(Hask)o(ell)
i(can)f(be)f(found)i(in)f([Thompson].)589 2673 y(The)29
b(paper)g(be)o(gins)h(with)e(de\002nitions)j(of)d(re)o(gular)i(e)o
(xpressions,)j(and)c(ho)n(w)f(strings)i(are)448 2786
y(matched)e(to)d(them;)j(this)f(also)f(gi)n(v)o(es)h(our)f(\002rst)g
(Hask)o(ell)h(treatment)g(also.)37 b(After)26 b(describing)448
2899 y(the)d(abstract)i(data)f(type)f(of)g(sets)g(we)f(de\002ne)i
(non-deterministic)j(\002nite)c(automata,)h(and)f(their)448
3011 y(implementation)37 b(in)d(Hask)o(ell.)61 b(W)-7
b(e)33 b(then)i(sho)n(w)f(ho)n(w)f(to)h(b)n(uild)i(an)e(NF)-7
b(A)32 b(corresponding)448 3124 y(to)k(each)g(re)o(gular)h(e)o
(xpression,)k(and)36 b(ho)n(w)f(such)i(a)e(machine)i(can)f(be)g
(optimised,)k(\002rst)35 b(by)448 3237 y(transforming)21
b(it)d(into)h(a)f(deterministic)j(machine,)f(and)e(then)h(by)f
(minimising)i(the)e(state)h(space)448 3350 y(of)29 b(the)g(DF)-7
b(A.)26 b(W)-7 b(e)28 b(conclude)j(with)d(a)h(discussion)i(of)e(re)o
(gular)h(de\002nitions,)h(and)e(sho)n(w)g(ho)n(w)448
3463 y(recognisers)e(for)d(strings)h(matching)g(re)o(gular)g
(de\002nitions)g(can)f(be)g(b)n(uilt.)448 3756 y Fi(2)120
b(Regular)30 b(Expr)n(essions)448 3963 y Fg(Re)o(gular)h(e)o
(xpressions)h(are)e(patterns)i(which)e(can)g(be)g(used)h(to)e(describe)
j(sets)e(of)g(strings)h(of)448 4076 y(characters)26 b(of)e(v)n(arious)h
(kinds,)f(such)h(as)585 4263 y Fd(\017)46 b Fg(the)23
b(identi\002ers)i(of)e(a)f(programming)j(language)h(\226)c(strings)j
(of)e(alphanumeric)j(charac-)676 4376 y(ters)e(which)f(be)o(gin)i(with)
e(an)h(alphabetic)i(character;)585 4564 y Fd(\017)46
b Fg(the)22 b(numbers)i(\226)d(inte)o(ger)j(or)e(real)h(\226)e(gi)n(v)o
(en)i(in)f(a)g(programming)i(language;)i(and)c(so)g(on.)448
4751 y(There)i(are)g(\002)n(v)o(e)e(sorts)j(of)e(pattern,)i(or)e(re)o
(gular)i(e)o(xpression:)1920 5225 y(2)p eop
%%Page: 3 3
3 2 bop 498 561 a Fc(")375 b Fg(This)24 b(is)f(the)h(Greek)g(character)
h Fe(epsilon)p Fg(,)h(which)d(matches)i(the)f(empty)g(string.)498
673 y Ff(x)369 b(x)23 b Fg(is)g(an)o(y)h(character)-5
b(.)31 b(This)23 b(matches)i(the)f(character)h(itself.)498
786 y Ff(\(r)594 800 y Fb(1)633 786 y Ff(|r)729 800 y
Fb(2)768 786 y Ff(\))99 b(r)963 800 y Fb(1)1025 786 y
Fg(and)24 b Ff(r)1227 800 y Fb(2)1289 786 y Fg(are)g(re)o(gular)h(e)o
(xpressions.)498 899 y Ff(\(r)594 913 y Fb(1)633 899
y Ff(r)681 913 y Fb(2)720 899 y Ff(\))147 b(r)963 913
y Fb(1)1025 899 y Fg(and)24 b Ff(r)1227 913 y Fb(2)1289
899 y Fg(are)g(re)o(gular)h(e)o(xpressions.)498 1012
y Ff(\(r\)*)225 b(r)23 b Fg(is)g(a)g(re)o(gular)i(e)o(xpression.)448
1211 y(Examples)19 b(of)f(re)o(gular)h(e)o(xpressions)j(include)d
Ff(\(a|\(ba\)\))p Fg(,)d Ff(\(\(ba\)|\()p Fc(")p Ff(|\(a\)*\)\))e
Fg(and)19 b Ff(hello)p Fg(.)589 1324 y(In)f(order)i(to)e(gi)n(v)o(e)g
(a)f(more)i(readable)h(v)o(ersion)f(of)f(these,)i(it)e(is)g(assumed)h
(that)g Ff(*)e Fg(binds)i(more)448 1437 y(tightly)30
b(than)g(juxtaposition)i(\()p Fe(i.e)o(.)43 b Ff(\(r)1679
1451 y Fb(1)1718 1437 y Ff(r)1766 1451 y Fb(2)1805 1437
y Ff(\))p Fg(\),)29 b(and)g(that)g(juxtaposition)j(binds)e(more)f
(tightly)448 1550 y(than)e Ff(\(r)726 1564 y Fb(1)764
1550 y Ff(|r)860 1564 y Fb(2)899 1550 y Ff(\))p Fg(.)34
b(This)25 b(means)h(that)g Ff(r)1656 1564 y Fb(1)1696
1550 y Ff(r)1744 1564 y Fb(2)1783 1550 y Ff(*)e Fg(will)h(mean)h
Ff(\(r)2339 1564 y Fb(1)2378 1550 y Ff(\(r)2474 1564
y Fb(2)2513 1550 y Ff(\)*\))p Fg(,)e Fe(not)i Ff(\(\(r)2989
1564 y Fb(1)3028 1550 y Ff(r)3076 1564 y Fb(2)3115 1550
y Ff(\)\)*)p Fg(,)e(and)448 1663 y(that)g Ff(r)655 1677
y Fb(1)695 1663 y Ff(|r)791 1677 y Fb(2)829 1663 y Ff(r)877
1677 y Fb(3)939 1663 y Fg(will)g(mean)f Ff(r)1371 1677
y Fb(1)1410 1663 y Ff(|\(r)1554 1677 y Fb(2)1593 1663
y Ff(r)1641 1677 y Fb(3)1680 1663 y Ff(\))p Fg(,)f Fe(not)i
Ff(\(r)2008 1677 y Fb(1)2047 1663 y Ff(|r)2143 1677 y
Fb(2)2182 1663 y Ff(\)r)2278 1677 y Fb(3)2317 1663 y
Fg(.)589 1776 y(A)f(Hask)o(ell)h(algebraic)i(type)f(representing)i(re)o
(gular)d(e)o(xpressions)j(is)c(gi)n(v)o(en)h(by)448 1956
y Ff(data)47 b(Reg)g(=)g(Epsilon)f(|)973 2068 y(Literal)g(Char)h(|)973
2181 y(Or)g(Reg)g(Reg)g(|)973 2294 y(Then)g(Reg)g(Reg)g(|)973
2407 y(Star)g(Reg)973 2520 y(deriving)f(Eq)448 2700 y
Fg(The)25 b(statement)h Ff(deriving)45 b(Eq)24 b Fg(at)g(the)h(end)h
(of)e(the)h(de\002nition)i(ensures)f(that)f(the)g(type)h
Ff(Reg)448 2813 y Fg(is)i(made)g(to)g(belong)h(to)f(the)g(type)h(class)
g Ff(Eq)p Fg(;)g(in)e(other)i(w)o(ords)g(the)f(equality)i(function)g
Ff(==)c Fg(is)448 2926 y(de\002ned)f(o)o(v)o(er)e Ff(Reg)p
Fg(.)589 3039 y(This)33 b(de\002nition)h(and)f(those)h(which)e(follo)n
(w)h(can)g(be)g(found)g(in)g(the)f(\002le)g Ff(RegExp.hs)p
Fg(;)448 3152 y(this)c(\002le)f(contains)j(the)d(module)i
Ff(RegExp)p Fg(,)c(which)j(will)f(be)g(included)j(in)d(other)i(modules)
f(in)448 3265 y(the)c(system.)30 b(The)23 b(Hask)o(ell)h
(representations)k(of)c Ff(\(a|\(ab\)\))c Fg(and)k Ff(\(\(ba\)|\()p
Fc(")p Ff(|\(a\)*\)\))c Fg(are)448 3445 y Ff(Or)47 b(\(Literal)f('a'\))
h(\(Then)f(\(Literal)g('a'\))g(\(Literal)g('b'\)\))448
3558 y(Or)h(\(Then)g(\(Literal)e('b'\))i(\(Literal)f('a'\)\))591
3671 y(\(Or)h(Epsilon)f(\(Star)h(\(Literal)e('a'\)\)\))448
3851 y Fg(respecti)n(v)o(ely)-6 b(.)48 b(In)29 b(order)g(to)g(shorten)i
(these)f(de\002nitions)h(we)d(will)g(usually)j(de\002ne)e(constant)448
3963 y(literals)c(such)g(as)448 4143 y Ff(a)48 b(=)f(Literal)f('a')448
4256 y(b)i(=)f(Literal)f('b')448 4436 y Fg(so)24 b(that)g(the)g(e)o
(xpressions)i(abo)o(v)o(e)e(become)448 4616 y Ff(Or)47
b(a)h(\(Then)e(a)i(b\))381 b(Or)47 b(\(Then)g(b)g(a\))g(\(Or)g(Epsilon)
f(\(Star)g(a\)\))448 4796 y Fg(If)24 b(we)e(use)i(the)g(in\002x)f
(forms)h(of)g Ff(Or)e Fg(and)i Ff(Then)p Fg(,)d Ff(`Or`)h
Fg(and)i Ff(`Then`)p Fg(,)d(the)o(y)j(read)448 4976 y
Ff(a)48 b(`Or`)e(\(a)i(`Then`)e(b\))190 b(\(a)47 b(`Then`)f(b\))h(`Or`)
g(\(Epsilon)f(`Or`)g(\(Star)h(a\)\))1920 5225 y Fg(3)p
eop
%%Page: 4 4
4 3 bop 448 573 a Fg(Functions)34 b(o)o(v)o(er)e(the)g(type)g(of)g(re)o
(gular)h(e)o(xpressions)i(are)d(de\002ned)g(by)g(recursion)i(o)o(v)o
(er)e(the)448 686 y(structure)26 b(of)e(the)f(e)o(xpression.)32
b(Examples)24 b(include)448 873 y Ff(literals)46 b(::)h(Reg)g(->)g
([Char])448 1099 y(literals)f(Epsilon)284 b(=)48 b([])448
1212 y(literals)e(\(Literal)f(ch\))i(=)h([ch])448 1325
y(literals)e(\(Or)h(r1)g(r2\))142 b(=)48 b(literals)d(r1)i(++)h
(literals)d(r2)448 1438 y(literals)h(\(Then)g(r1)h(r2\))g(=)h(literals)
d(r1)i(++)h(literals)d(r2)448 1551 y(literals)h(\(Star)g(r\))238
b(=)48 b(literals)d(r)448 1738 y Fg(which)24 b(prints)h(a)e(list)h(of)f
(the)h(literals)h(appearing)i(in)c(a)g(re)o(gular)i(e)o(xpression,)h
(and)448 1926 y Ff(printRE)46 b(::)h(Reg)g(->)g([Char])448
2152 y(printRE)f(Epsilon)285 b(=)47 b("@")448 2265 y(printRE)f
(\(Literal)g(ch\))h(=)g([ch])448 2378 y(printRE)f(\(Or)h(r1)g(r2\))544
2491 y(=)g("\(")g(++)g(printRE)f(r1)h(++)g("|")g(++)h(printRE)d(r2)j
(++)f("\)")448 2604 y(printRE)f(\(Then)g(r1)i(r2\))544
2716 y(=)f("\(")g(++)g(printRE)f(r1)h(++)g(printRE)f(r2)h(++)h("\)")448
2829 y(printRE)e(\(Star)g(r\))i(=)f("\(")g(++)g(printRE)f(r)h(++"\)*")
448 3017 y Fg(which)35 b(gi)n(v)o(es)g(a)g(printable)i(form)d(of)h(a)f
(re)o(gular)i(e)o(xpression.)65 b(Note)34 b(that)h Ff('@')e
Fg(is)i(used)g(to)448 3130 y(represent)26 b(epsilon)g(in)e(ASCII.)e
(The)h(type)i Ff(Reg)d Fg(can)i(be)g(made)g(to)f(belong)j(to)d(the)i
Ff(Show)c Fg(class)448 3243 y(thus:)448 3430 y Ff(instance)46
b(Show)g(Reg)h(where)544 3543 y(show)f(=)i(printRE)448
3731 y Fg(or)24 b(indeed)h(an)e(instance)j(could)f(be)e(deri)n(v)o(ed)i
(automatically)i(\(lik)o(e)d Ff(Eq)e Fg(earlier\).)448
3894 y Fh(Exer)n(cises)448 4056 y Fg(1.)27 b(Write)18
b(a)g(more)g(readable)i(form)e(of)g(the)g(e)o(xpression)j
Ff(\(\(\(\(a|b\)|c\)\(\(a\)*|\(b\)*\)\)\(c)o(|d\))o(\))p
Fg(.)448 4219 y(2.)29 b(What)23 b(is)h(the)f(unabbre)n(viated)28
b(form)23 b(of)h Ff(\(\(x?\)*\(y?\)*\)+)p Fg(?)448 4512
y Fi(3)120 b(Matching)30 b(r)n(egular)g(expr)n(essions)448
4719 y Fg(Re)o(gular)25 b(e)o(xpressions)j(are)c(patterns.)33
b(W)-7 b(e)24 b(should)i(ask)f(which)f(strings)i(match)f(each)g(re)o
(gular)448 4832 y(e)o(xpression.)1920 5225 y(4)p eop
%%Page: 5 5
5 4 bop 498 561 a Fc(")375 b Fg(The)23 b(empty)h(string)h(matches)g
(epsilon.)498 786 y Ff(x)369 b Fg(The)23 b(character)j
Ff(x)d Fg(matches)h(the)g(pattern)h Ff(x)p Fg(,)d(for)i(an)o(y)g
(character)i Ff(x)p Fg(.)498 1012 y Ff(\(r)594 1026 y
Fb(1)633 1012 y Ff(|r)729 1026 y Fb(2)768 1012 y Ff(\))99
b Fg(The)21 b(string)h Ff(st)e Fg(will)h(match)g Ff(\(r)1920
1026 y Fb(1)1959 1012 y Ff(|r)2055 1026 y Fb(2)2094 1012
y Ff(\))f Fg(if)g Ff(st)g Fg(matches)i(either)h Ff(r)2947
1026 y Fb(1)3006 1012 y Fg(or)e Ff(r)3150 1026 y Fb(2)3209
1012 y Fg(\(or)915 1125 y(both\).)498 1351 y Ff(\(r)594
1365 y Fb(1)633 1351 y Ff(r)681 1365 y Fb(2)720 1351
y Ff(\))147 b Fg(The)29 b(string)i Ff(st)c Fg(will)i(match)h
Ff(\(r)1961 1365 y Fb(1)2000 1351 y Ff(r)2048 1365 y
Fb(2)2087 1351 y Ff(\))e Fg(if)h Ff(st)f Fg(can)i(be)f(split)h(into)g
(tw)o(o)f(sub-)915 1464 y(strings)e Ff(st)1278 1478 y
Fb(1)1340 1464 y Fg(and)e Ff(st)1591 1478 y Fb(2)1630
1464 y Fg(,)f Ff(st)47 b(=)h(st)2012 1478 y Fb(1)2051
1464 y Ff(++st)2243 1478 y Fb(2)2281 1464 y Fg(,)24 b(so)g(that)i
Ff(st)2689 1478 y Fb(1)2751 1464 y Fg(matches)g Ff(r)3121
1478 y Fb(1)3184 1464 y Fg(and)915 1577 y Ff(st)1011
1591 y Fb(2)1073 1577 y Fg(matches)f Ff(r)1442 1591 y
Fb(2)1481 1577 y Fg(.)498 1803 y Ff(\(r\)*)225 b Fg(The)24
b(string)h Ff(st)d Fg(will)h(match)i Ff(\(r\)*)c Fg(if)j
Ff(st)e Fg(can)j(be)e(split)i(into)f(zero)h(or)e(more)915
1915 y(substrings,)35 b Ff(st)47 b(=)g(st)1672 1929 y
Fb(1)1711 1915 y Ff(++st)1903 1929 y Fb(2)1942 1915 y
Ff(++...++st)2374 1929 y Fb(n)2411 1915 y Fg(,)31 b(each)g(of)f(which)g
(matches)915 2028 y Ff(r)p Fg(.)e(The)21 b(zero)i(case)h(implies)f
(that)g(the)f(empty)h(string)h(will)e(match)h Ff(\(r\)*)d
Fg(for)915 2141 y Fe(any)k Fg(re)o(gular)h(e)o(xpression)h
Ff(r)p Fg(.)448 2344 y(This)e(can)g(be)f(implemented)j(in)e(Hask)o
(ell,)g(in)f(the)h(module)h Ff(Matches)p Fg(.)h(The)d(\002rst)h(three)g
(cases)448 2457 y(are)g(a)f(simple)h(transliteration)k(of)23
b(the)h(de\002nitions)i(abo)o(v)o(e.)448 2643 y Ff(matches)46
b(::)h(Reg)g(->)g(String)f(->)i(Bool)448 2868 y(matches)e(Epsilon)g(st)
286 b(=)47 b(\(st)g(==)g(""\))448 2981 y(matches)f(\(Literal)g(ch\))h
(st)g(=)g(\(st)g(==)g([ch]\))448 3094 y(matches)f(\(Or)h(r1)g(r2\))g
(st)544 3207 y(=)g(matches)f(r1)h(st)g(||)h(matches)d(r2)j(st)448
3393 y Fg(In)35 b(the)h(case)g(of)f(juxtaposition,)42
b(we)34 b(need)i(an)f(auxiliary)j(function)f(which)f(gi)n(v)o(es)f(the)
h(list)448 3506 y(containing)27 b(all)c(the)h(possible)i(w)o(ays)e(of)f
(splitting)j(up)e(a)f(list.)448 3692 y Ff(splits)46 b(::)i([a])e(->)i
([)f(\([a],[a]\))e(])448 3918 y(splits)h(st)i(=)f([)g(splitAt)f(n)i(st)
f(|)g(n)h(<-)f([0)g(..)g(length)f(st])h(])448 4104 y
Fg(F)o(or)39 b(e)o(xample,)45 b Ff(splits)h([2,3])38
b Fg(is)h Ff([\([],[2,3]\),\([2],[3]\),\([2,)o(3],[)o(]\)])o
Fg(.)71 b(A)448 4217 y(string)33 b(will)e(match)g Ff(\(Then)46
b(r1)i(r2\))29 b Fg(if)i(at)g(least)h(one)g(of)f(the)g(splits)i(gi)n(v)
o(es)e(strings)i(which)448 4330 y(match)24 b Ff(r1)e
Fg(and)i Ff(r2)p Fg(.)448 4540 y Ff(matches)46 b(\(Then)g(r1)i(r2\))f
(st)544 4653 y(=)g(or)g([matches)f(r1)h(s1)g(&&)g(matches)f(r2)h(s2)h
(|)f(\(s1,s2\)<-splits)d(st])448 4863 y Fg(The)34 b(\002nal)g(case)g
(is)g(that)h(of)f Ff(Star)p Fg(.)58 b(W)-7 b(e)33 b(can)i(e)o(xplain)g
Ff(a*)e Fg(as)h(either)h Fc(")e Fg(or)h(as)g Ff(a)f Fg(follo)n(wed)448
4976 y(by)24 b Ff(a*)p Fg(.)29 b(W)-7 b(e)23 b(can)i(use)f(this)h(to)e
(implement)j(the)e(check)h(for)f(the)h(match,)f(b)n(ut)g(it)g(is)g
(problematic)1920 5225 y(5)p eop
%%Page: 6 6
6 5 bop 448 573 a Fg(when)21 b Ff(a)e Fg(can)i(be)f(matched)i(by)e
Fc(")p Fg(.)28 b(When)20 b(this)h(happens,)i(the)e(match)f(is)h(tested)
g(recursi)n(v)o(ely)i(on)448 686 y(the)j(same)g(string,)i(gi)n(ving)f
(an)e(in\002nite)i(loop.)36 b(This)26 b(is)g(a)n(v)n(oided)i(by)e
(disallo)n(wing)i(an)d(epsilon)448 799 y(match)f(on)g
Ff(a)e Fg(\226)h(the)h(\002rst)f(match)h(on)g Ff(a)e
Fg(has)i(to)g(be)f(non-tri)n(vial.)448 1011 y Ff(matches)46
b(\(Star)g(r\))i(st)544 1124 y(=)f(matches)f(Epsilon)g(st)h(||)735
1237 y(or)g([)g(matches)f(r)i(s1)f(&&)g(matches)f(\(Star)g(r\))h(s2)g
(|)1451 1350 y(\(s1,s2\))e(<-)j(frontSplits)c(st)j(])448
1562 y(frontSplits)20 b Fg(is)j(de\002ned)i(lik)o(e)f
Ff(splits)d Fg(b)n(ut)j(so)g(as)f(to)h(e)o(xclude)h(the)e(split)i
Ff(\([],st\))p Fg(.)448 1725 y Fh(Exer)n(cises)448 1888
y Fg(3.)38 b(Ar)n(gue)28 b(that)f(the)g(string)h Fc(")e
Fg(matches)i Ff(\(a|\(bc\)*\)*)23 b Fg(and)k(that)g(the)g(string)h
Ff(abba)d Fg(matches)448 2001 y Ff(a\(\(b|a\)*\(ba\)*\))p
Fg(.)448 2164 y(4.)k(Why)23 b(does)h(the)g(string)h Ff(bab)d
Fg(not)h(match)h Ff(a\(\(b|a\)*\(ba\)*\))p Fg(?)448 2326
y(5.)33 b(Gi)n(v)o(e)24 b(informal)i(descriptions)i(of)d(the)g(sets)h
(of)f(strings)h(matching)h(the)e(follo)n(wing)h(re)o(gular)448
2439 y(e)o(xpressions.)466 2627 y Ff(\(a|b\)*a\(a|b\)*a\(a|b\))186
b(\(a|b\)*a\(a|b\)\(a|b\))g Fc(")p Ff(|a|b|ba|b?\(ab\)+a?)448
2864 y Fg(6.)29 b(Gi)n(v)o(e)22 b(re)o(gular)j(e)o(xpressions)i
(describing)f(the)e(follo)n(wing)h(sets)f(of)g(strings)585
3052 y Fd(\017)46 b Fg(All)22 b(strings)k(of)d Ff(a)p
Fg(s)g(and)h Ff(b)p Fg(s)f(containing)j(at)e(most)f(tw)o(o)g
Ff(a)p Fg(s.)585 3240 y Fd(\017)46 b Fg(All)22 b(strings)k(of)d
Ff(a)p Fg(s)g(and)h Ff(b)p Fg(s)f(containing)j(e)o(xactly)f(tw)o(o)e
Ff(a)p Fg(s.)585 3427 y Fd(\017)46 b Fg(All)22 b(strings)k(of)d
Ff(a)p Fg(s)g(and)h Ff(b)p Fg(s)f(of)g(length)i(at)f(most)f(three.)585
3615 y Fd(\017)46 b Fg(All)26 b(strings)i(of)e Ff(a)p
Fg(s)g(and)h Ff(b)p Fg(s)f(which)h(contain)i(no)e(repeated)h(adjacent)h
(characters,)h(that)676 3728 y(is)23 b(no)h(substring)i(of)d(the)h
(form)f Ff(aa)g Fg(or)g Ff(bb)p Fg(.)448 4020 y Fi(4)120
b(Sets)448 4227 y Fg(A)24 b(set)h(is)f(a)g(collection)k(of)d(elements)h
(of)e(a)g(particular)k(type,)d(which)g(is)g(both)g(lik)o(e)h(and)f
(unlik)o(e)448 4340 y(a)e(list.)29 b(Lists)24 b(are)g(f)o(amiliar)g
(from)g(Hask)o(ell,)g(and)g(e)o(xamples)h(include)448
4553 y Ff([Joe,Sue,Ben])235 b([Ben,Sue,Joe])448 4666
y([Joe,Sue,Sue,Ben])43 b([Joe,Sue,Ben,Sue])1920 5225
y Fg(6)p eop
%%Page: 7 7
7 6 bop 448 545 a Ff(module)46 b(Sets)h(\()g(Set)g(,)544
658 y(empty)667 b(,)47 b(--)g(Set)g(a)544 770 y(sing)715
b(,)47 b(--)g(a)h(->)f(Set)g(a)544 883 y(memSet)619 b(,)47
b(--)g(Ord)g(a)h(=>)f(Set)g(a)g(->)g(a)h(->)f(Bool)544
996 y(union,inter,diff)139 b(,)47 b(--)g(Ord)g(a)h(=>)f(Set)g(a)g(->)g
(Set)g(a)h(->)f(Set)g(a)544 1109 y(eqSet)667 b(,)47 b(--)g(Eq)g(a)96
b(=>)47 b(Set)g(a)g(->)g(Set)g(a)h(->)f(Bool)544 1222
y(subSet)619 b(,)47 b(--)g(Ord)g(a)h(=>)f(Set)g(a)g(->)g(Set)g(a)h(->)f
(Bool)544 1335 y(makeSet)571 b(,)47 b(--)g(Ord)g(a)h(=>)f([a])g(->)g
(Set)g(a)544 1448 y(mapSet)619 b(,)47 b(--)g(Ord)g(b)h(=>)f(\(a)g(->)g
(b\))g(->)g(Set)g(a)h(->)f(Set)g(b)544 1561 y(filterSet)475
b(,)47 b(--)g(\(a)g(->)h(Bool\))e(->)h(Set)g(a)g(->)h(Set)f(a)544
1674 y(foldSet)571 b(,)47 b(--)g(\(a)g(->)h(a)f(->)g(a\))g(->)h(a)f(->)
g(Set)g(a)h(->)f(a)544 1787 y(showSet)571 b(,)47 b(--)g(Show)g(a)g(=>)g
(Set)g(a)h(->)f(String)544 1900 y(card)715 b(,)47 b(--)g(Set)g(a)h(->)f
(Int)544 2012 y(flatten)571 b(,)47 b(--)g(Set)g(a)h(->)f([a])544
2125 y(setlimit)618 b(--)47 b(Eq)g(a)h(=>)f(\(Set)g(a)g(->)g(Set)g(a\))
g(->)h(Set)e(a)i(->)f(Set)g(a)544 2238 y(\))g(where)448
2464 y(import)f(List)h(hiding)f(\()i(union)e(\))1007
2760 y Fg(Figure)24 b(1:)29 b(The)23 b(functions)j(in)e(the)f(set)h
(abstract)i(data)e(type)448 3037 y(Each)j(of)f(these)i(lists)f(is)g
(dif)n(ferent)h(\226)e(not)h(only)h(do)e(the)h(elements)h(of)f(a)f
(list)h(matter)l(,)h(b)n(ut)f(also)448 3150 y(the)35
b Fe(or)m(der)i Fg(in)d(which)h(the)o(y)f(occur)l(,)39
b(and)34 b(their)h Fe(multiplicity)i Fg(\(the)e(number)g(of)f(times)h
(each)448 3263 y(element)25 b(occurs\).)589 3375 y(In)34
b(man)o(y)g(situations,)39 b(order)c(and)f(multiplicity)j(are)d(irrele)
n(v)n(ant.)61 b(If)34 b(we)f(w)o(ant)h(to)g(talk)448
3488 y(about)22 b(the)e(collection)j(of)d(people)i(coming)f(to)f(our)g
(birthday)j(party)-6 b(,)21 b(we)f(just)g(w)o(ant)g(the)h(names)448
3601 y(\226)28 b(we)f(cannot)j(in)l(vite)g(someone)f(more)g(than)f
(once,)i(so)e(multiplicity)j(is)d(not)h(important;)j(the)448
3714 y(order)f(we)d(might)i(list)f(them)g(in)g(is)g(also)h(of)f(no)h
(interest.)47 b(In)29 b(other)i(w)o(ords,)f(all)g(we)e(w)o(ant)h(to)448
3827 y(kno)n(w)d(is)f(the)h Fe(set)i Fg(of)d(people)j(coming.)35
b(In)26 b(the)g(e)o(xample)g(abo)o(v)o(e,)h(this)f(is)g(the)f(set)h
(containing)448 3940 y Ff(Joe)p Fg(,)c Ff(Sue)g Fg(and)i
Ff(Ben)p Fg(.)589 4053 y(Sets)f(can)h(be)f(implemented)i(in)e(a)g
(number)h(of)f(w)o(ays)g(in)g(Hask)o(ell,)h(and)f(the)h(precise)g(form)
448 4166 y(is)29 b(not)g(important)i(for)e(the)g(user)-5
b(.)46 b(It)29 b(is)g(sensible)i(to)d(declare)j(the)e(type)h(as)f(an)g
(abstract)i(data)448 4279 y(type,)26 b(so)f(that)h(its)f
(implementation)j(is)d(hidden)i(from)e(the)g(user)-5
b(.)35 b(This)24 b(is)h(done)h(by)g(f)o(ailing)g(to)448
4392 y(e)o(xport)31 b(the)e(constructor)j(of)d(the)h(type)g(which)f
(implements)i(sets.)46 b(Details)30 b(of)f(this)h(mecha-)448
4505 y(nism)f(are)g(gi)n(v)o(en)h(in)f(Chapter)h(16)f(of)g([Thompson],)
i(which)e(also)h(discusses)i(the)d(particular)448 4617
y(implementation)38 b(gi)n(v)o(en)e(here)f(in)g(rather)h(more)f
(detail.)65 b(The)34 b(de\002nition)j(is)e(gi)n(v)o(en)g(in)g(the)448
4730 y(module)28 b Ff(Sets)c Fg(which)j(is)f(de\002ned)i(in)e(the)h
(\002le)f Ff(Sets.hs)p Fg(.)34 b(The)26 b(heading)j(of)d(the)h(module)g
(is)448 4843 y(illustrated)g(in)c(Figure)h(1.)1920 5225
y(7)p eop
%%Page: 8 8
8 7 bop 589 573 a Fg(The)31 b(implementation)j(we)c(ha)n(v)o(e)i(gi)n
(v)o(en)f(represents)j(a)c(set)i(as)e(an)h Fe(or)m(der)m(ed)i(list)e
(of)g(ele-)448 686 y(ments)e(without)h(r)m(epetitions)p
Fg(,)j(wrapped)d(up)f(by)g(the)g(constructor)j Ff(SetI)p
Fg(.)26 b(F)o(or)i(instance,)k(the)448 799 y(set)24 b(of)f(birthday)j
(party)f(attendees)h(will)d(be)g(gi)n(v)o(en)i(by)448
976 y Ff(SetI)47 b([Ben,Joe,Sue])448 1154 y Fg(The)32
b(implementation)j(of)d(the)h(type)g Ff(Set)e Fg(is)h(hidden)i(because)
g(the)e Ff(SetI)f Fg(constructor)k(for)448 1267 y(this)24
b(type)h(is)e(not)h(e)o(xported)h(from)f(the)g(module.)589
1380 y(Since)30 b(the)f(lists)g(are)g(ordered)i(we)d(e)o(xpect)i(to)f
(ha)n(v)o(e)h(an)e(ordering)k(o)o(v)o(er)c(the)i(type)f(of)g(set)448
1493 y(elements;)j(it)27 b(is)g(this)h(requirement)i(that)e(gi)n(v)o
(es)g(rise)h(to)e(the)h(constraint)i Ff(Ord)47 b(a)27
b Fg(in)g(man)o(y)g(of)448 1606 y(the)f(set-manipulating)k(functions.)
37 b(The)25 b(indi)n(vidual)j(functions)g(are)e(described)i(and)e
(imple-)448 1719 y(mented)f(as)e(follo)n(ws.)448 1877
y(The)g Ff(empty)f Fg(set)h(is)h(the)g(empty)g(list)448
2055 y Ff(empty)47 b(=)g(SetI)g([])448 2233 y Fg(and)24
b Ff(sing)47 b(a)22 b Fg(is)i(the)g(singleton)i(set,)d(consisting)k(of)
c(the)h(single)h(element)f Ff(a)448 2411 y(sing)47 b(x)g(=)h(SetI)e
([x])448 2588 y Fg(Figure)22 b(2)f(de\002nes)h(the)g(functions)i
Ff(union,inter,diff)16 b Fg(which)22 b(gi)n(v)o(e)g(the)f(union,)i
(intersec-)448 2701 y(tion)32 b(and)g(dif)n(ference)h(of)e(tw)o(o)g
(sets.)52 b(The)30 b(union)j(consists)g(of)e(the)g(elements)i
(occurring)g(in)448 2814 y(either)d(set)g(\(or)f(both\),)i(the)e
(intersection)j(of)d(those)h(elements)g(in)f(both)h(sets)f(and)h(the)f
(dif)n(fer)n(-)448 2927 y(ence)i(of)g(those)g(elements)h(in)e(the)h
(\002rst)f(b)n(ut)g(not)h(the)g(second)h(set.)49 b(\(Note)31
b(also)g(that)f Ff(union)448 3040 y Fg(here)24 b(is)g(a)f
(rede\002nition)j(of)d(the)h(function)i(with)d(the)h(same)g(name)f
(from)h(the)f Ff(Prelude.hs)p Fg(.\))589 3153 y(These)e(de\002nitions)i
(each)e(follo)n(w)g(the)f(same)h(pattern:)29 b(a)20 b(function)j(lik)o
(e)e Ff(uni)e Fg(implements)448 3266 y(the)27 b(operation)i(o)o(v)o(er)
d(lists,)i(and)f(the)f(top-le)n(v)o(el)i Ff(union)c Fg(function)29
b(lifts)e(this)g(to)f(operate)i(o)o(v)o(er)448 3379 y(the)c(lists)g
(`wrapped')i(by)d(the)h(constructor)j Ff(SetI)p Fg(.)589
3492 y(The)g(operation)j Ff(memSet)46 b(xs)h(x)26 b Fg(tests)i(whether)
g Ff(x)e Fg(is)h(a)g(member)g(of)g(the)g(set)g Ff(xs)p
Fg(.)38 b(Note)448 3605 y(that)24 b(this)g(is)f(an)h(optimisation)i(of)
d(the)h(function)h Ff(elem)d Fg(o)o(v)o(er)h(lists;)i(since)f(the)g
(list)g(is)f(ordered,)448 3718 y(we)28 b(need)i(look)g(no)f(further)i
(once)e(we)g(ha)n(v)o(e)g(found)h(an)f(element)h(greater)h(than)e(the)h
(one)f(we)448 3830 y(seek.)448 4008 y Ff(memSet)46 b(::)i(Ord)e(a)i(=>)
f(Set)g(a)g(->)h(a)f(->)g(Bool)448 4234 y(memSet)f(\(SetI)h([]\))g(y)
143 b(=)47 b(False)448 4347 y(memSet)f(\(SetI)h(\(x:xs\)\))f(y)544
4460 y(|)h(x<y)429 b(=)47 b(memSet)f(\(SetI)h(xs\))g(y)544
4573 y(|)g(x==y)381 b(=)47 b(True)544 4686 y(|)g(otherwise)141
b(=)47 b(False)448 4863 y(subSet)f(xs)i(ys)20 b Fg(tests)i(whether)g
Ff(xs)f Fg(is)g(a)g(subset)i(of)e Ff(ys)p Fg(;)g(that)h(is)g(whether)g
(e)n(v)o(ery)g(element)g(of)448 4976 y Ff(xs)g Fg(is)i(an)f(element)i
(of)e Ff(ys)p Fg(.)1920 5225 y(8)p eop
%%Page: 9 9
9 8 bop 448 849 a Ff(union)47 b(::)g(Ord)g(a)g(=>)g(Set)g(a)h(->)f(Set)
g(a)g(->)g(Set)g(a)448 962 y(union)g(\(SetI)f(xs\))h(\(SetI)f(ys\))h(=)
h(SetI)e(\(uni)h(xs)g(ys\))448 1188 y(uni)g(::)g(Ord)g(a)h(=>)f([a])g
(->)g([a])g(->)g([a])448 1301 y(uni)g([])g(ys)382 b(=)47
b(ys)448 1414 y(uni)g(xs)g([])382 b(=)47 b(xs)448 1526
y(uni)g(\(x:xs\))f(\(y:ys\))544 1639 y(|)h(x<y)429 b(=)47
b(x)h(:)f(uni)g(xs)g(\(y:ys\))544 1752 y(|)g(x==y)381
b(=)47 b(x)h(:)f(uni)g(xs)g(ys)544 1865 y(|)g(otherwise)141
b(=)47 b(y)h(:)f(uni)g(\(x:xs\))f(ys)448 2091 y(inter)h(::)g(Ord)g(a)g
(=>)g(Set)g(a)h(->)f(Set)g(a)g(->)g(Set)g(a)448 2204
y(inter)g(\(SetI)f(xs\))h(\(SetI)f(ys\))h(=)h(SetI)e(\(int)h(xs)g(ys\))
448 2430 y(int)g(::)g(Ord)g(a)h(=>)f([a])g(->)g([a])g(->)g([a])448
2543 y(int)g([])g(ys)334 b(=)47 b([])448 2656 y(int)g(xs)g([])334
b(=)47 b([])448 2768 y(int)g(\(x:xs\))f(\(y:ys\))544
2881 y(|)h(x<y)429 b(=)47 b(int)g(xs)g(\(y:ys\))544 2994
y(|)g(x==y)381 b(=)47 b(x)h(:)f(int)g(xs)g(ys)544 3107
y(|)g(otherwise)141 b(=)47 b(int)g(\(x:xs\))f(ys)448
3333 y(diff)h(::)g(Ord)g(a)g(=>)h(Set)f(a)g(->)g(Set)g(a)h(->)f(Set)g
(a)448 3446 y(diff)g(\(SetI)f(xs\))h(\(SetI)g(ys\))f(=)i(SetI)f(\(dif)f
(xs)h(ys\))448 3672 y(dif)g(::)g(Ord)g(a)h(=>)f([a])g(->)g([a])g(->)g
([a])448 3785 y(dif)g([])g(ys)334 b(=)47 b([])448 3898
y(dif)g(xs)g([])334 b(=)47 b(xs)448 4010 y(dif)g(\(x:xs\))f(\(y:ys\))
544 4123 y(|)h(x<y)429 b(=)47 b(x)h(:)f(dif)g(xs)g(\(y:ys\))544
4236 y(|)g(x==y)381 b(=)47 b(dif)g(xs)g(ys)544 4349 y(|)g(otherwise)141
b(=)47 b(dif)g(\(x:xs\))f(ys)1504 4645 y Fg(Figure)24
b(2:)29 b(Set)23 b(operations)1920 5225 y(9)p eop
%%Page: 10 10
10 9 bop 448 573 a Ff(subSet)46 b(::)i(Ord)e(a)i(=>)f(Set)g(a)g(->)h
(Set)f(a)g(->)g(Bool)448 686 y(subSet)f(\(SetI)h(xs\))g(\(SetI)f(ys\))h
(=)g(subS)g(xs)g(ys)448 912 y(subS)g(::)g(Ord)g(a)g(=>)h([a])f(->)g
([a])g(->)g(Bool)448 1024 y(subS)g([])g(ys)286 b(=)47
b(True)448 1137 y(subS)g(xs)g([])286 b(=)47 b(False)448
1250 y(subS)g(\(x:xs\))f(\(y:ys\))544 1363 y(|)h(x<y)429
b(=)47 b(False)544 1476 y(|)g(x==y)381 b(=)47 b(subS)g(xs)g(ys)544
1589 y(|)g(x>y)429 b(=)47 b(subS)g(\(x:xs\))f(ys)448
1758 y(eqSet)h(x)g(y)23 b Fg(tests)h(whether)g(tw)o(o)g(sets)g(are)f
(equal.)448 1928 y Ff(eqSet)47 b(\(SetI)f(xs\))h(\(SetI)f(ys\))h(=)h
(\(xs)f(==)g(ys\))448 2097 y Fg(and)24 b(an)g(instance)h(declaration)i
(for)d Ff(Eq)e Fg(o)o(v)o(er)i Ff(Set)d Fg(mak)o(es)k
Ff(eqSet)c Fg(into)j Ff(==)e Fg(o)o(v)o(er)i Ff(Set)p
Fg(.)589 2210 y(The)c(functions)i Ff(mapSet)p Fg(,)c
Ff(filterSet)e Fg(and)k Ff(foldSet)d Fg(beha)n(v)o(e)22
b(lik)o(e)e Ff(map)p Fg(,)f Ff(filter)e Fg(and)448 2323
y Ff(foldr)j Fg(e)o(xcept)k(that)f(the)o(y)f(operate)i(o)o(v)o(er)f
(sets.)29 b Ff(separate)19 b Fg(is)j(a)g(synon)o(ym)h(for)g
Ff(filterSet)p Fg(.)448 2492 y Ff(mapSet)46 b(::)i(Ord)e(b)i(=>)f(\(a)g
(->)g(b\))h(->)f(Set)g(a)g(->)g(Set)g(b)448 2605 y(mapSet)f(f)i(\(SetI)
e(xs\))h(=)h(makeSet)d(\(map)i(f)g(xs\))448 2831 y(filterSet)f(::)h
(\(a)g(->)g(Bool\))f(->)i(Set)f(a)g(->)g(Set)g(a)448
2944 y(filterSet)f(p)h(\(SetI)f(xs\))h(=)h(SetI)e(\(filter)g(p)i(xs\))
448 3170 y(foldSet)e(::)h(\(a)g(->)h(a)f(->)g(a\))g(->)h(a)f(->)g(Set)g
(a)h(->)f(a)448 3283 y(foldSet)f(f)i(x)f(\(SetI)f(xs\))95
b(=)47 b(\(foldr)g(f)g(x)g(xs\))448 3452 y Fg(The)23
b(operation)j Ff(makeSet)21 b Fg(turns)k(a)e(list)h(into)g(a)f(set)448
3621 y Ff(makeSet)46 b(::)h(Ord)g(a)h(=>)f([a])g(->)g(Set)g(a)448
3734 y(makeSet)f(=)i(SetI)e(.)i(remDups)d(.)j(sort)926
3847 y(where)926 3960 y(remDups)d([])286 b(=)48 b([])926
4073 y(remDups)d([x])238 b(=)48 b([x])926 4186 y(remDups)d(\(x:y:xs\))
1021 4299 y(|)i(x)h(<)f(y)334 b(=)48 b(x)f(:)h(remDups)d(\(y:xs\))1021
4412 y(|)i(otherwise)141 b(=)48 b(remDups)d(\(y:xs\))448
4581 y(showSet)h(f)23 b Fg(gi)n(v)o(es)h(a)g(printable)i(v)o(ersion)f
(of)f(a)f(set,)h(one)g(item)g(per)g(line,)g(using)h(the)f(function)448
4694 y Ff(f)f Fg(to)g(gi)n(v)o(e)h(a)f(printable)j(v)o(ersion)f(of)e
(each)i(element.)448 4863 y Ff(showSet)46 b(::)h(Show)g(a)g(=>)h(Set)e
(a)i(->)f(String)448 4976 y(showSet)f(\(SetI)g(xs\))h(=)h(concat)e
(\(map)h(\(\(++"\\n"\))e(.)i(show\))g(xs\))1897 5225
y Fg(10)p eop
%%Page: 11 11
11 10 bop 448 573 a Ff(card)22 b Fg(gi)n(v)o(es)i(the)g(number)g(of)g
(elements)h(in)e(a)g(set,)448 740 y Ff(card)47 b(::)g(Set)g(a)g(->)h
(Int)448 853 y(card)f(\(SetI)f(xs\))h(=)h(length)e(xs)448
1020 y(flatten)21 b Fg(turns)k(a)e(set)g(into)i(an)e(ordered)j(list)d
(of)h(the)g(elements)h(of)e(the)h(set)448 1187 y Ff(flatten)46
b(::)h(Set)g(a)h(->)f([a])448 1300 y(flatten)f(\(SetI)g(xs\))h(=)h(xs)
448 1467 y Fg(Ob)o(viously)26 b(this)f(breaks)h(the)e(abstraction)k
(barrier)l(,)d(b)n(ut)g(it)f(is)g(necessary)j(in)d(some)h(situations)
448 1580 y(to)f(do)f(this.)589 1693 y(The)h(function)h
Ff(setlimit)46 b(f)h(x)23 b Fg(gi)n(v)o(es)h(the)g(`limit')g(of)f(the)h
(sequence)1060 1860 y Ff(x)47 b(,)h(f)f(x)h(,)f(f)g(\(f)h(x\))f(,)g(f)h
(\(f)f(\(f)g(x\)\))g(,)g(...)448 2027 y Fg(that)23 b(is)e(the)h
(\002rst)g(element)h(in)f(the)g(sequence)i(whose)e(successor)i(is)e
(equal,)h(as)f(a)f(set,)h(to)g(the)g(el-)448 2139 y(ement)h(itself.)29
b(In)23 b(other)g(w)o(ords,)g(k)o(eep)h(applying)g Ff(f)e
Fg(until)h(a)f(\002x)o(ed)g(point)i(or)e(limit)g(is)h(reached.)448
2306 y Ff(setlimit)46 b(::)h(Eq)g(a)h(=>)f(\(Set)f(a)i(->)f(Set)g(a\))g
(->)g(Set)g(a)h(->)f(Set)g(a)448 2419 y(setlimit)f(f)h(s)544
2532 y(|)g(s==next)285 b(=)47 b(s)544 2645 y(|)g(otherwise)189
b(=)47 b(setlimit)f(f)h(next)639 2758 y(where)639 2871
y(next)g(=)g(f)h(s)448 3080 y Fh(Exer)n(cises)448 3234
y Fg(7.)27 b(De\002ne)17 b(the)i(function)h Ff(powerSet)46
b(::)95 b(...)f(=>)47 b(Set)g(a)h(->)f(Set)g(\(Set)f(a\))17
b Fg(which)448 3347 y(returns)28 b(the)f(set)g(of)f(all)h(subsets)h(of)
f(a)f(set.)38 b(What)26 b(conte)o(xt)i(information)h(is)e(required)h
(on)f(the)448 3460 y(type)e Ff(a)p Fg(?)448 3614 y(8.)k(Ho)n(w)22
b(w)o(ould)i(you)g(de\002ne)g(the)g(functions)448 3802
y Ff(setUnion)46 b(::)h(...)g(=>)g(Set)g(\(Set)g(a\))g(->)g(Set)g(a)448
3915 y(setInter)f(::)h(...)g(=>)g(Set)g(\(Set)g(a\))g(->)g(Set)g(a)448
4103 y Fg(which)22 b(return)h(the)e(union)i(and)f(intersection)i(of)d
(a)g(set)h(of)f(sets?)29 b(What)22 b(conte)o(xts)h(are)e(required)448
4216 y(on)j(the)g(types?)448 4370 y(9.)j(Can)20 b(in\002nite)h(sets)f
(\(of)g(numbers,)i(for)e(instance\))i(be)e(adequately)j(represented)g
(by)c(ordered)448 4483 y(lists?)30 b(Can)24 b(you)g(tell)g(if)f(tw)o(o)
g(in\002nite)h(lists)h(are)e(equal,)i(for)e(instance?)448
4638 y(10.)28 b(The)21 b(abstract)i(data)e(type)h Ff(Set)47
b(a)20 b Fg(can)h(be)g(represented)j(in)d(a)g(number)h(of)f(dif)n
(ferent)h(w)o(ays.)448 4751 y(Alternati)n(v)o(es)31 b(include:)40
b(arbitrary)31 b(lists)e(\(rather)h(than)f(ordered)h(lists)f(without)g
(repetitions\),)448 4863 y(and)h(boolean)g(v)n(alued)h(functions,)h
(that)d(is)g(elements)h(of)f(the)g(type)g Ff(a)48 b(->)f(Bool)p
Fg(.)c(Gi)n(v)o(e)28 b(im-)448 4976 y(plementations)f(of)d(the)f(type)i
(using)f(these)h(tw)o(o)e(representations.)1897 5225
y(11)p eop
%%Page: 12 12
12 11 bop 448 573 a Fi(5)120 b(Non-deterministic)31 b(Finite)f(A)-6
b(utomata)448 780 y Fg(A)25 b(Non-deterministic)30 b(Finite)d
(Automaton)g(or)f(NF)-7 b(A)25 b(is)g(a)h(simple)h(machine)g(which)g
(can)f(be)448 893 y(used)f(to)e(recognise)j(re)o(gular)f(e)o
(xpressions.)32 b(It)23 b(consists)j(of)d(four)h(components)585
1058 y Fd(\017)46 b Fg(A)22 b(\002nite)i(set)f(of)h(states,)g
Fc(S)5 b Fg(.)585 1236 y Fd(\017)46 b Fg(A)22 b(\002nite)i(set)f(of)h
(mo)o(v)o(es.)585 1415 y Fd(\017)46 b Fg(A)22 b(start)i(state)h(\(in)e
Fc(S)5 b Fg(\).)585 1593 y Fd(\017)46 b Fg(A)22 b(set)i(of)f(terminal)i
(or)e(\002nal)h(states)g(\(a)g(subset)h(of)e Fc(S)5 b
Fg(\).)448 1758 y(In)24 b(the)g(Hask)o(ell)g(module)h
Ff(NfaTypes)20 b Fg(this)k(is)g(written)448 1923 y Ff(data)47
b(Nfa)g(a)g(=)h(NFA)f(\(Set)f(a\))1260 2036 y(\(Set)g(\(Move)h(a\)\))
1260 2149 y(a)1260 2262 y(\(Set)f(a\))1069 2375 y(deriving)f
(\(Eq,Show\))448 2539 y Fg(This)34 b(has)g(been)h(represented)i(by)d
(an)f(algebraic)k(type)d(rather)h(than)g(a)e(4-tuple)j(simply)e(for)448
2652 y(readability)-6 b(.)32 b(The)22 b(type)h(of)g(states)h(can)f(be)f
(dif)n(ferent)j(in)d(dif)n(ferent)j(applications,)h(and)d(indeed)448
2765 y(in)h(the)g(follo)n(wing)h(we)d(use)i(both)h(numbers)f(and)g
(sets)g(of)g(numbers)h(as)e(states.)589 2878 y(A)g(mo)o(v)o(e)g(is)g
(between)i(tw)o(o)e(states,)h(and)g(is)g(either)h(gi)n(v)o(en)f(by)f(a)
g(character)l(,)j(or)e(an)f Fc(")p Fg(.)448 3043 y Ff(data)47
b(Move)g(a)g(=)g(Move)g(a)h(Char)e(a)i(|)1116 3156 y(Emove)f(a)g(a)1116
3269 y(deriving)f(\(Eq,Ord,Show\))448 3434 y Fg(The)23
b(\002rst)h(e)o(xample)g(of)f(an)h(NF)-7 b(A,)21 b(called)k
Ff(M)p Fg(,)d(follo)n(ws.)1067 4247 y @beginspecial 63
@llx 561 @lly 276 @urx 649 @ury 2130 @rwi @setspecial
%%BeginDocument: pic1.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 63 561 276 649
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
91 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 69 184 ] concat
%I
163 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 85.0001 184 ] concat
%I
227 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 117 176 ] concat
%I
275 720 16 16 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
35 712 75 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
107 712 155 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
187 712 235 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
267 712 315 712 Line
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I 5
82 724
70 750
94 759
111 751
99 724
5 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I 5
83 698
65 670
92 662
113 671
100 698
5 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 144 901 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 224 901 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 304 901 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 384 901 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 144 957 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 144 845 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 184 917 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 264 917 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 344 917 ] concat
%I
[
(b)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 448 4412 a(The)i(states)h(are)f Ff(0,1,2,3)p
Fg(,)d(with)i(the)i(start)f(state)h Ff(0)e Fg(indicated)j(by)e(an)g
(incoming)h(arro)n(w)-6 b(,)24 b(and)448 4525 y(the)h(\002nal)f(states)
i(indicated)h(by)e(shaded)h(circles.)33 b(In)24 b(this)i(case)f(there)g
(is)f(a)h(single)g(\002nal)g(state,)448 4638 y Ff(3)p
Fg(.)37 b(The)26 b(mo)o(v)o(es)g(are)h(indicated)i(by)e(the)f(arro)n
(ws,)i(mark)o(ed)f(with)f(characters)j Ff(a)d Fg(and)h
Ff(b)e Fg(in)i(this)448 4751 y(case.)i(From)22 b(state)h
Ff(0)e Fg(there)i(are)f(tw)o(o)g(possible)i(mo)o(v)o(es)e(on)h(symbol)g
Ff(a)p Fg(,)e(to)h Ff(1)f Fg(and)i(to)f(remain)g(at)448
4863 y Ff(0)p Fg(.)28 b(This)23 b(is)h(one)g(source)h(of)e(the)h
(non-determinism)j(in)c(the)h(machine.)589 4976 y(The)g(Hask)o(ell)g
(representation)k(of)23 b(the)h(machine)h(is)1897 5225
y(12)p eop
%%Page: 13 13
13 12 bop 448 573 a Ff(NFA)448 686 y(\(makeSet)46 b([0)h(..)g(3]\))448
799 y(\(makeSet)f([)h(Move)g(0)g('a')g(0)h(,)973 912
y(Move)f(0)g('a')g(1)h(,)973 1024 y(Move)f(0)g('b')g(0)h(,)973
1137 y(Move)f(1)g('b')g(2)h(,)973 1250 y(Move)f(2)g('b')g(3)h(]\))448
1363 y(0)448 1476 y(\(sing)f(3\))448 1648 y Fg(A)23 b(second)i(e)o
(xample,)f(called)h Ff(N)p Fg(,)d(is)h(illustrated)k(belo)n(w)-6
b(.)1133 2610 y @beginspecial 74 @llx 550 @lly 271 @urx
655 @ury 1970 @rwi @setspecial
%%BeginDocument: pic2.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 74 550 271 655
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 109 184 ] concat
%I
51 680 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 181 184 ] concat
%I
51 680 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 253 184 ] concat
%I
51 680 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 333 184 ] concat
%I
51 680 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 181 264 ] concat
%I
51 680 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 253 264 ] concat
%I
51 680 16 16 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
51 680 83 680 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
115 680 155 680 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
187 680 227 680 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
259 680 307 680 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
187 760 227 760 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
107 693 162 748 Line
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I 4
171 664
187 648
219 648
235 664
4 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 152 869 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 224 949 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 296 949 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 224 869 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 296 869 ] concat
%I
[
(4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 376 869 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 176 909 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 256 965 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 184 861 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 256 885 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 263 829 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 336 885 ] concat
%I
[
(b)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 448 2782 a(The)23 b(Hask)o(ell)i(representation)j(of)23
b(this)h(machine)h(is)448 2976 y Ff(NFA)448 3089 y(\(makeSet)46
b([0)h(..)g(5]\))448 3202 y(\(makeSet)f([)h(Move)g(0)g('a')g(1,)973
3315 y(Move)g(1)g('b')g(2,)973 3428 y(Move)g(0)g('a')g(3,)973
3541 y(Move)g(3)g('b')g(4,)973 3653 y(Emove)g(3)g(4,)973
3766 y(Move)g(4)g('b')g(5)h(]\))448 3879 y(0)448 3992
y(\(makeSet)e([2,5]\))448 4186 y Fg(This)26 b(machine)i(contains)g(tw)o
(o)e(kinds)h(of)f(non-determinism.)40 b(The)26 b(\002rst)g(is)g(at)g
(state)h Ff(0)p Fg(,)e(from)448 4299 y(which)30 b(it)g(is)f(possible)j
(to)e(mo)o(v)o(e)f(to)g(either)i Ff(1)e Fg(or)g Ff(3)g
Fg(on)g(reading)j Ff(a)p Fg(.)46 b(The)29 b(second)i(occurs)g(at)448
4412 y(state)21 b Ff(3)p Fg(:)26 b(it)20 b(is)g(possible)i(to)e(mo)o(v)
o(e)f(`in)l(visibly')k(from)d(state)h Ff(3)e Fg(to)h(state)g
Ff(4)f Fg(on)h(the)g(epsilon)i(mo)o(v)o(e,)448 4525 y
Ff(Emove)47 b(3)g(4)p Fg(.)589 4638 y(The)31 b(Hask)o(ell)h(code)g(for)
f(these)h(machines)g(together)i(with)c(a)h(function)i
Ff(print)p 3166 4638 29 4 v 33 w(nfa)c Fg(to)448 4751
y(print)c(an)e(nf)o(a)h(whose)g(states)h(are)f(numbered)h(can)f(be)f
(found)i(in)f(the)f(module)i Ff(NfaMisc)p Fg(.)589 4863
y(Ho)n(w)20 b(do)i(these)g(machines)h(recognise)g(strings?)31
b(A)20 b(mo)o(v)o(e)g(can)i(be)f(made)h(from)f(one)g(state)448
4976 y Ff(s)27 b Fg(to)g(another)i Ff(t)e Fg(either)h(if)g(the)f
(machine)i(contains)h Ff(Emove)46 b(s)h(t)27 b Fg(or)g(if)g(the)h(ne)o
(xt)g(symbol)g(to)1897 5225 y(13)p eop
%%Page: 14 14
14 13 bop 448 573 a Fg(be)33 b(read)g(is,)h(say)-6 b(,)35
b Ff(a)c Fg(and)i(the)g(machine)g(contains)i(a)d(mo)o(v)o(e)g
Ff(Move)47 b(s)g(a)g(t)p Fg(.)55 b(A)31 b(string)j(will)448
686 y(be)f Fe(accepted)38 b Fg(by)c(a)e(machine)j(if)d(there)i(is)f(a)g
(sequence)j(of)d(mo)o(v)o(es)g(through)i(states)f(of)f(the)448
799 y(machine)g(starting)g(at)d(the)i(start)g(state)f(and)h
(terminating)h(at)e(one)h(of)f(the)g(terminal)h(states)h(\226)448
912 y(this)24 b(is)g(called)h(an)e Fe(accepting)j(path)p
Fg(.)k(F)o(or)22 b(instance,)k(the)e(path)1552 1145 y
Ff(0)1674 1095 y(a)1625 1145 y Fd(\000)-16 b(!)26 b Ff(1)1919
1095 y(b)1869 1145 y Fd(\000)-15 b(!)25 b Ff(2)2164 1095
y(b)2114 1145 y Fd(\000)-15 b(!)25 b Ff(3)448 1349 y
Fg(is)j(an)g(accepting)i(path)f(through)h Ff(M)c Fg(for)j(the)f(string)
h Ff(abb)p Fg(.)40 b(This)27 b(means)i(that)f(the)g(machine)h
Ff(M)448 1462 y Fg(accepts)e(this)e(string.)34 b(Note)25
b(that)g(other)h(paths)g(through)h(the)e(machine)h(are)f(possible)i
(for)e(this)448 1575 y(string,)g(an)e(e)o(xample)i(being)1552
1717 y Ff(0)1674 1667 y(a)1625 1717 y Fd(\000)-16 b(!)26
b Ff(0)1919 1667 y(b)1869 1717 y Fd(\000)-15 b(!)25 b
Ff(0)2164 1667 y(b)2114 1717 y Fd(\000)-15 b(!)25 b Ff(0)448
1883 y Fg(All)c(that)h(is)f(needed)i(for)f(the)g(machine)g(to)f(accept)
i(is)e Fe(one)h Fg(accepting)i(path;)f(it)e(does)i(not)e(af)n(fect)448
1996 y(acceptance)26 b(if)c(there)h(are)g(other)h(non-accepting)i(\(or)
d(indeed)h(accepting\))h(paths.)30 b(More)23 b(than)448
2109 y(one)h(accepting)i(path)f(can)f(e)o(xist.)29 b(Machine)c
Ff(N)d Fg(accepts)j(the)f(string)h Ff(ab)d Fg(by)i(both)1674
2342 y Ff(0)1797 2292 y(a)1747 2342 y Fd(\000)-15 b(!)25
b Ff(1)2041 2292 y(b)1992 2342 y Fd(\000)-16 b(!)26 b
Ff(2)448 2547 y Fg(and)1552 2670 y Ff(0)1674 2620 y(a)1625
2670 y Fd(\000)-16 b(!)26 b Ff(3)1922 2620 y Fc(")1869
2670 y Fd(\000)-15 b(!)25 b Ff(4)2164 2620 y(b)2114 2670
y Fd(\000)-15 b(!)25 b Ff(5)448 2837 y Fg(A)30 b(machine)h(will)g
Fe(r)m(eject)i Fg(a)d(string)i(only)f(when)g(there)g(is)f(no)h
(accepting)i(path.)51 b(Machine)31 b Ff(N)448 2950 y
Fg(rejects)f(the)f(string)h Ff(a)p Fg(,)f(since)g(the)g(tw)o(o)f(paths)
i(through)h(the)e(machine)g(labelled)i(by)e Ff(a)e Fg(f)o(ail)i(to)448
3063 y(terminate)c(in)f(a)f(\002nal)g(state:)1575 3175
y Ff(0)1697 3125 y(a)1648 3175 y Fd(\000)-16 b(!)25 b
Ff(1)151 b(0)2141 3125 y(a)2091 3175 y Fd(\000)-15 b(!)25
b Ff(3)448 3342 y Fg(Machine)f Ff(N)e Fg(rejects)i(the)f(string)h
Ff(aa)d Fg(since)j(there)f(is)g Fe(no)f Fg(path)i(through)h(the)d
(machine)i(labelled)448 3455 y(by)f Ff(aa)p Fg(:)k(after)c(reading)h
Ff(a)d Fg(the)i(machine)h(can)e(be)h(in)f(state)h Ff(1)p
Fg(,)e Ff(3)g Fg(or)i Ff(4)p Fg(,)e(from)h(none)h(of)g(these)g(can)448
3568 y(an)h Ff(a)e Fg(mo)o(v)o(e)h(be)h(made.)448 3861
y Fi(6)120 b(Simulating)31 b(an)f(NF)-11 b(A)448 4068
y Fg(As)25 b(w)o(as)h(e)o(xplained)i(in)e(the)g(last)g(section,)i(a)e
(string)h Ff(st)d Fg(is)i(accepted)i(by)e(a)f(machine)i
Ff(M)e Fg(when)448 4181 y(there)k(is)f(at)f(least)i(one)f(accepting)j
(path)d(labelled)i(by)e Ff(st)e Fg(through)k Ff(M)p Fg(,)d(and)h(is)g
(rejected)h(by)f Ff(M)448 4294 y Fg(when)c(no)g(such)g(path)g(e)o
(xists.)589 4406 y(The)40 b(k)o(e)o(y)h(to)g(implementation)i(is)d(to)h
(e)o(xplore)h(simultaneously)i Fe(all)d Fg(possible)h(paths)448
4519 y(through)36 b(the)d(machine)i(labelled)g(by)f(a)f(particular)i
(string.)60 b(T)-7 b(ak)o(e)33 b(as)g(an)h(informal)g(e)o(xam-)448
4632 y(ple)26 b(the)g(string)h Ff(ab)d Fg(and)i(the)g(machine)g
Ff(N)p Fg(.)f(After)g(reading)j(no)d(input,)i(the)f(machine)h(can)e
(only)448 4745 y(be)d(in)g(state)h Ff(0)p Fg(.)k(On)22
b(reading)i(an)e Ff(a)f Fg(there)i(are)f(mo)o(v)o(es)g(to)g(states)h
Ff(1)e Fg(and)h Ff(3)p Fg(;)g(ho)n(we)n(v)o(er)g(this)h(is)f(not)448
4858 y(the)28 b(whole)f(story)-6 b(.)40 b(From)26 b(state)i
Ff(3)d Fg(it)i(is)g(possible)i(to)e(mak)o(e)g(an)g Fc(")p
Fg(-mo)o(v)o(e)g(to)g(state)g Ff(4)p Fg(,)g(so)g(after)448
4971 y(reading)f Ff(a)c Fg(the)i(machine)h(can)f(be)f(in)h(an)o(y)f(of)
h(the)f(states)i Fd(f)p Ff(1,3,4)p Fd(g)p Fg(.)1897 5225
y(14)p eop
%%Page: 15 15
15 14 bop 589 573 a Fg(On)26 b(reading)h(a)f Ff(b)p Fg(,)f(we)g(ha)n(v)
o(e)i(to)f(look)g(for)h(all)f(the)g(possible)i Ff(b)d
Fg(mo)o(v)o(es)h(from)f(each)i(of)f(the)448 686 y(states)36
b Fd(f)p Ff(1,3,4)p Fd(g)p Fg(.)59 b(From)34 b Ff(1)f
Fg(we)g(can)i(mo)o(v)o(e)e(to)h Ff(2)p Fg(,)i(from)e
Ff(3)f Fg(to)h Ff(4)f Fg(and)i(from)f Ff(4)f Fg(to)h
Ff(5)f Fg(\226)h(no)448 799 y Fc(")p Fg(-mo)o(v)o(es)e(are)g(possible)i
(from)d(the)h(states)h Fd(f)p Ff(2,4,5)p Fd(g)p Fg(,)e(and)h(so)g(the)g
(states)g(accessible)j(after)448 912 y(reading)26 b(the)f(string)g
Ff(ab)e Fg(are)h Fd(f)p Ff(2,4,5)p Fd(g)p Fg(.)30 b(Is)23
b(this)i(string)h(to)e(be)g(accepted)i(by)e Ff(N)p Fg(?)g(W)-7
b(e)23 b(accept)j(it)448 1024 y(e)o(xactly)h(if)e(the)h(set)g(contains)
i(a)d(\002nal)g(state)i(\226)e(it)g(contains)j(both)e
Ff(2)f Fg(and)h Ff(5)p Fg(,)e(so)i(it)f(is)g(accepted.)448
1137 y(Note)33 b(that)g(the)f(states)i(accessible)h(after)e(reading)h
Ff(a)e Fg(are)g Fd(f)p Ff(1,3,4)p Fd(g)p Fg(;)k(this)d(set)g(contains)h
(no)448 1250 y(\002nal)24 b(state,)g(and)g(so)f(the)h(machine)h
Ff(N)d Fe(r)m(ejects)j Fg(the)f(string)h Ff(a)p Fg(.)589
1363 y(There)f(is)g(a)f(general)i(pattern)g(to)f(this)g(process,)h
(which)f(consists)h(of)f(a)f(repetition)j(of)585 1544
y Fd(\017)46 b Fg(T)-7 b(ak)o(e)22 b(a)g(set)h(of)g(states,)h(such)f
(as)g Fd(f)p Ff(1,3,4)p Fd(g)p Fg(,)e(and)j(\002nd)e(the)h(set)g(of)g
(states)h(accessible)h(by)676 1657 y(a)20 b(mo)o(v)o(e)h(on)h(a)f
(particular)i(symbol,)g(e.g.)28 b Ff(b)p Fg(.)e(In)c(this)g(case)f(it)h
(is)f(the)g(set)h Fd(f)p Ff(2,4,5)p Fd(g)p Fg(.)k(This)676
1770 y(is)d(called)i Ff(onemove)c Fg(in)i(the)h(module)g
Ff(NfaLib)p Fg(.)585 1955 y Fd(\017)46 b Fg(T)-7 b(ak)o(e)22
b(a)h(set)g(of)h(states,)g(lik)o(e)f Fd(f)p Ff(1,3)p
Fd(g)p Fg(,)g(and)g(\002nd)g(the)g(set)h(of)f(states)h(accessible)i
(from)d(the)676 2068 y(states)i(by)g Fe(zer)l(o)h Fg(or)e(more)h
Fc(")p Fg(-mo)o(v)o(es.)32 b(In)25 b(this)g(e)o(xample,)h(it)e(is)h
(the)g(set)g Fd(f)p Ff(1,3,4)p Fd(g)p Fg(.)30 b(This)676
2181 y(is)23 b(the)h Fc(")p Fg(-closure)i(of)d(the)h(original)i(set,)d
(and)h(is)f(called)i Ff(closure)c Fg(in)i Ff(NfaLib)p
Fg(.)448 2362 y(The)35 b(functions)i Ff(onemove)32 b
Fg(and)k Ff(closure)c Fg(are)j(composed)i(in)d(the)i(function)h
Ff(onetrans)p Fg(,)448 2475 y(and)28 b(this)f(function)i(is)e(iterated)
i(along)f(the)g(string)g(by)f(the)g Ff(trans)e Fg(function)k(of)e(the)g
(module)448 2588 y Ff(ImplementNfa)p Fg(.)448 2836 y
Fa(Implementation)f(in)f(Hask)o(ell)448 3010 y Fg(W)-7
b(e)23 b(discuss)i(the)f(de)n(v)o(elopment)i(of)d(the)h(function)448
3191 y Ff(trans)47 b(::)g(Ord)g(a)g(=>)g(Nfa)g(a)h(->)f(String)f(->)h
(Set)g(a)448 3372 y Fg(top-do)n(wn.)30 b(Iteration)c(along)f(a)e
(string)i(is)e(gi)n(v)o(en)h(by)g Ff(foldl)448 3553 y(foldl)47
b(::)g(\(Set)f(a)i(->)f(Char)g(->)g(Set)g(a\))1212 3666
y(->)g(Set)g(a)g(->)h(String)e(->)h(Set)g(a)448 3892
y(foldl)g(f)g(r)h([])238 b(=)47 b(r)448 4005 y(foldl)g(f)g(r)h
(\(c:cs\))e(=)h(foldl)f(f)i(\(f)f(r)h(c\))f(cs)448 4186
y Fg(The)24 b(\002rst)f(ar)n(gument,)j Ff(f)p Fg(,)d(is)g(the)i(step)f
(function,)i(taking)f(a)f(set)g(and)g(a)g(character)i(to)e(the)g
(states)448 4299 y(accessible)33 b(from)e(the)f(set)h(on)f(the)h
(character)-5 b(.)51 b(The)30 b(second)h(ar)n(gument,)j
Ff(r)p Fg(,)d(is)f(the)g(starting)448 4412 y(state,)24
b(and)g(the)g(\002nal)g(ar)n(gument)h(is)e(the)h(string)h(along)g
(which)f(to)f(iterate.)589 4525 y(Ho)n(w)j(does)i(the)f(function)i
(operate?)41 b(If)26 b(gi)n(v)o(en)h(an)g(empty)h(string,)g(the)f
(start)h(state)f(is)g(the)448 4638 y(result.)50 b(If)30
b(gi)n(v)o(en)h(a)e(string)j Ff(\(c:cs\))p Fg(,)d(the)h(function)j(is)c
(called)j(again,)g(with)e(the)g(tail)h(of)f(the)448 4751
y(string,)d Ff(cs)p Fg(,)e(and)h(with)g(a)f(ne)n(w)g(starting)i(state,)
g Ff(\(f)47 b(r)h(c\))p Fg(,)24 b(which)i(is)g(the)g(result)g(of)g
(applying)448 4863 y(the)32 b(step)g(function)i(to)e(the)f(starting)j
(set)e(of)f(states)i(and)f(the)g(\002rst)f(character)j(of)d(the)h
(string.)448 4976 y(No)n(w)22 b(to)i(de)n(v)o(elop)h
Ff(trans)p Fg(.)1897 5225 y(15)p eop
%%Page: 16 16
16 15 bop 448 573 a Ff(trans)47 b(mach)f(str)639 686
y(=)i(foldl)e(step)h(startset)e(str)735 799 y(where)735
912 y(step)h(set)h(ch)g(=)h(onetrans)d(mach)i(ch)g(set)735
1024 y(startset)e(=)j(closure)d(mach)i(\(sing)f(\(startstate)f
(mach\)\))448 1212 y(step)27 b Fg(is)i(deri)n(v)o(ed)h(from)f
Ff(onetrans)d Fg(simply)j(by)g(suppling)j(its)d(machine)h(ar)n(gument)g
Ff(mach)p Fg(,)448 1325 y(similarly)20 b Ff(startset)15
b Fg(is)j(deri)n(v)o(ed)h(from)f(the)g(machine)i Ff(mach)p
Fg(,)d(using)i(the)f(functions)j Ff(closure)448 1438
y Fg(and)27 b Ff(startstate)p Fg(.)k(All)25 b(these)i(functions)h(are)e
(de\002ned)h(in)e(the)h Ff(NfaLib)e Fg(module.)36 b(W)-7
b(e)25 b(dis-)448 1551 y(cuss)g(their)f(de\002nitions)i(no)n(w)-6
b(.)448 1738 y Ff(onetrans)46 b(::)h(Ord)g(a)g(=>)h(Nfa)e(a)i(->)f
(Char)g(->)g(Set)g(a)g(->)g(Set)g(a)448 1964 y(onetrans)f(mach)g(c)i(x)
f(=)h(closure)e(mach)g(\(onemove)g(mach)g(c)i(x\))448
2152 y Fg(Ne)o(xt,)23 b(we)g(e)o(xamine)h Ff(onemove)p
Fg(,)448 2340 y Ff(onemove)46 b(::)h(Ord)g(a)h(=>)f(Nfa)g(a)g(->)g
(Char)g(->)g(Set)g(a)h(->)f(Set)g(a)448 2565 y(onemove)f(\(NFA)h
(states)f(moves)g(start)h(term\))f(c)h(x)544 2678 y(=)g(makeSet)f([)h
(s)h(|)f(t)h(<-)f(flatten)f(x)h(,)1307 2791 y(Move)g(z)g(d)h(s)f(<-)h
(flatten)d(moves)i(,)1307 2904 y(z==t)g(,)g(c==d)g(])448
3092 y Fg(The)26 b(essential)i(idea)f(here)g(is)f(to)g(run)g(through)i
(the)e(elements)i Ff(t)d Fg(of)h(the)g(set)g Ff(x)f Fg(and)i(the)f(set)
g(of)448 3205 y(mo)o(v)o(es,)21 b Ff(moves)d Fg(looking)k(for)e(all)h
Ff(c)p Fg(-mo)o(v)o(es)f(originating)j(at)d Ff(t)p Fg(.)27
b(F)o(or)19 b(each)i(of)f(these,)i(the)e(result)448 3318
y(of)k(the)g(mo)o(v)o(e,)e Ff(s)p Fg(,)g(goes)j(into)f(the)g(resulting)
i(set.)589 3430 y(The)e(de\002nition)h(uses)f(list)g(comprehensions,)k
(so)23 b(it)h(is)f(necessary)j(\002rst)e(to)f Ff(flatten)e
Fg(the)448 3543 y(sets)i Ff(x)f Fg(and)h Ff(moves)d Fg(into)j(lists,)g
(and)g(then)g(to)g(con)l(v)o(ert)h(the)f(list)f(comprehension)k(into)e
(a)e(set)g(by)448 3656 y(means)i(of)g Ff(makeSet)p Fg(.)448
3844 y Ff(closure)46 b(::)h(Ord)g(a)h(=>)f(Nfa)g(a)g(->)g(Set)g(a)h(->)
f(Set)g(a)448 4070 y(closure)f(\(NFA)h(states)f(moves)g(start)h(term\))
544 4183 y(=)g(setlimit)f(add)639 4296 y(where)639 4408
y(add)h(stateset)f(=)h(union)f(stateset)g(\(makeSet)g(accessible\))1355
4521 y(where)1355 4634 y(accessible)1451 4747 y(=)h([)g(s)h(|)f(x)h(<-)
f(flatten)f(stateset)f(,)1832 4860 y(Emove)i(y)g(s)h(<-)f(flatten)f
(moves)g(,)1832 4973 y(y==x)h(])1897 5225 y Fg(16)p eop
%%Page: 17 17
17 16 bop 448 573 a Fg(The)26 b(essence)i(of)e Ff(closure)d
Fg(is)j(to)g(tak)o(e)h(the)f(limit)g(of)g(the)g(function)i(which)f
(adds)g(to)f(a)f(set)h(of)448 686 y(states)e(all)e(those)h(states)h
(which)f(are)f(accessible)j(by)d(a)g(single)i Fc(")p
Fg(-mo)o(v)o(e;)f(in)f(the)h(limit)f(we)f(get)i(a)448
799 y(set)j(to)g(which)g(no)g(further)h(states)g(can)f(be)g(added)h(by)
f Fc(")p Fg(-transitions.)38 b(Adding)27 b(the)f(states)h(got)448
912 y(by)22 b(single)h Fc(")p Fg(-mo)o(v)o(es)f(is)g(accomplished)j(by)
c(the)h(function)i Ff(add)c Fg(and)j(the)f(auxiliary)i(de\002nition)448
1024 y Ff(accessible)c Fg(which)k(resembles)h(the)f(construction)j(of)d
Ff(onemove)p Fg(.)448 1317 y Fi(7)120 b(Implementing)30
b(an)g(example)448 1524 y Fg(The)23 b(machine)i Ff(P)e
Fg(is)g(illustrated)j(by)448 2820 y @beginspecial 42
@llx 490 @lly 411 @urx 622 @ury 3690 @rwi @setspecial
%%BeginDocument: pic4.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold Times-Roman Courier-Bold
%%Pages: 1
%%BoundingBox: 42 490 411 622
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 53 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def
/Times-Roman reencodeISO def
/Courier-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 128 0 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 105 288 ] concat
%I
119 568 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 105 176 ] concat
%I
119 568 16 16 Elli
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 313 232 ] concat
%I
119 568 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 393 232 ] concat
%I
119 568 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 473 232 ] concat
%I
119 568 16 16 Elli
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 40 0 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 33 232 ] concat
%I
119 568 16 16 Elli
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 105 288 ] concat
%I
119 568 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 105 176 ] concat
%I
119 568 16 16 Elli
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -39 232 ] concat
%I
119 568 16 16 Elli
End

End %I eop

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 33 232 ] concat
%I
31 568 71 568 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 33 232 ] concat
%I
103 568 143 568 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 33 232 ] concat
%I
247 624 303 624 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 33 232 ] concat
%I
247 512 303 512 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 33 232 ] concat
%I
415 568 463 568 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 33 232 ] concat
%I
495 568 543 568 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 33 232 ] concat
%I
175 576 223 616 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 33 232 ] concat
%I
175 560 223 520 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 33 232 ] concat
%I
335 624 391 576 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 33 232 ] concat
%I
335 520 391 560 Line
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 33 232 ] concat
%I 5
399 584
399 688
271 688
159 688
159 584
5 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 112 805 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 184 805 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 256 861 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 344 861 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 256 749 ] concat
%I
[
(4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 344 749 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 424 805 ] concat
%I
[
(6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 504 805 ] concat
%I
[
(7)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 584 805 ] concat
%I
[
(8)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 296 877 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 296 741 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 544 821 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 151 821 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 223 845 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 223 765 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 407 853 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 407 757 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 471 821 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 311 909 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 72 902 ] concat
%I
[
(Machine )
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-bold-r-normal-*-12-*-*-*-*-*-*-*
Courier-Bold 12 SetF
%I t
[ 1 0 0 1 128 899 ] concat
%I
[
(P)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 237 x Fh(Exer)n(cise)448 3220 y Fg(11.)j(Gi)n(v)o(e)23
b(the)h(Hask)o(ell)g(de\002nition)i(of)d(the)h(machine)h
Ff(P)p Fg(.)448 3383 y(The)32 b Fc(")p Fg(-closure)i(of)e(the)g(set)g
Fd(f)p Ff(0)p Fd(g)f Fg(is)h(the)g(set)g Fd(f)p Ff(0,1,2,4)p
Fd(g)p Fg(.)52 b(Looking)33 b(at)f(the)g(de\002nition)h(of)448
3496 y Ff(closure)17 b Fg(abo)o(v)o(e,)j(the)g(\002rst)f(application)j
(of)d(the)h(function)h Ff(add)d Fg(to)h Fd(f)p Ff(0)p
Fd(g)g Fg(gi)n(v)o(es)h(the)f(set)h Fd(f)p Ff(0,1)p Fd(g)p
Fg(;)448 3609 y(applying)k Ff(add)19 b Fg(to)i(this)h(gi)n(v)o(es)f
Fd(f)p Ff(0,1,2,4)p Fd(g)p Fg(.)26 b(Applying)d Ff(add)c
Fg(to)i(this)g(set)h(gi)n(v)o(es)f(the)g(same)g(set,)448
3722 y(hence)k(this)f(is)f(the)g(v)n(alue)h(of)f Ff(setlimit)e
Fg(here.)29 b(The)23 b(set)g(of)g(states)i(with)e(which)h(we)e(start)i
(the)448 3835 y(simulation)g(is)d(therefore)j Fd(f)p
Ff(0,1,2,4)p Fd(g)p Fg(.)i(Suppose)d(the)f(\002rst)f(input)h(is)g
Ff(a)p Fg(;)f(applying)j Ff(onemove)448 3947 y Fg(re)n(v)o(eals)d(only)
g(one)g Ff(a)e Fg(mo)o(v)o(e,)h(from)g Ff(2)f Fg(to)h
Ff(3)p Fg(.)27 b(T)-7 b(aking)20 b(the)h(closure)g(of)f(the)h(set)f
Fd(f)p Ff(3)p Fd(g)g Fg(gi)n(v)o(es)h(the)f(set)448 4060
y Fd(f)p Ff(1,2,3,4,6,7)p Fd(g)p Fg(.)29 b(A)23 b Ff(b)g
Fg(mo)o(v)o(e)h(from)g(here)h(is)f(only)h(from)g Ff(4)e
Fg(to)h Ff(5)p Fg(;)g(closing)i(under)g Fc(")p Fg(-mo)o(v)o(es)448
4173 y(gi)n(v)o(es)i Fd(f)p Ff(1,2,4,5,6,7)p Fd(g)p Fg(.)39
b(An)27 b Ff(a)f Fg(mo)o(v)o(e)h(from)h(here)g(is)g(possible)i(in)d(tw)
o(o)h(w)o(ays:)37 b(from)28 b Ff(2)e Fg(to)448 4286 y
Ff(3)i Fg(and)h(from)f Ff(7)f Fg(to)i Ff(8)p Fg(;)h(closing)g(up)f
Fd(f)p Ff(3,8)p Fd(g)e Fg(gi)n(v)o(es)i Fd(f)p Ff(1,2,3,4,6,7,8)p
Fd(g)p Fg(.)40 b(Is)28 b(the)h(string)h Ff(aba)448 4399
y Fg(therefore)e(accepted)f(by)f Ff(P)p Fg(?)e(Y)-9 b(es,)25
b(because)i Ff(8)e Fg(is)g(a)f(member)i(of)f Fd(f)p Ff(1,2,3,4,6,7,8)p
Fd(g)p Fg(.)30 b(This)448 4512 y(sequence)c(can)e(be)g(illustrated)i
(thus)1897 5225 y(17)p eop
%%Page: 18 18
18 17 bop 662 1223 a @beginspecial 36 @llx 544 @lly 346
@urx 633 @ury 3100 @rwi @setspecial
%%BeginDocument: pic5.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 36 544 346 633
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 56 917 ] concat
%I
[
(0)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 -0 685 ] concat
%I
72 227 112 227 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 120 917 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 120 901 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 120 885 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 120 869 ] concat
%I
[
(4)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 -0 685 ] concat
%I
136 195 176 195 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 184 885 ] concat
%I
[
(3)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 -0 685 ] concat
%I
200 195 240 195 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 248 917 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 248 901 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 248 885 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 248 869 ] concat
%I
[
(4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 248 853 ] concat
%I
[
(6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 248 837 ] concat
%I
[
(7)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 -0 685 ] concat
%I
264 179 304 179 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 312 869 ] concat
%I
[
(5)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 -0 685 ] concat
%I
328 179 368 179 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 376 917 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 376 901 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 376 885 ] concat
%I
[
(4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 376 869 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 376 853 ] concat
%I
[
(6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 376 837 ] concat
%I
[
(7)
] Text
End

End %I eop

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 -0 685 ] concat
%I
392 211 432 211 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 -0 685 ] concat
%I
392 147 432 147 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 440 901 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 440 837 ] concat
%I
[
(8)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 -0 685 ] concat
%I
456 211 496 211 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 -0 685 ] concat
%I
456 147 496 147 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 128 0 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 376 917 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 376 901 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 376 885 ] concat
%I
[
(4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 376 869 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 376 853 ] concat
%I
[
(6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 376 837 ] concat
%I
[
(7)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 504 821 ] concat
%I
[
(8)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 144 901 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 272 885 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 400 917 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 400 853 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 215 901 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 343 885 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 471 917 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 471 853 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 87 933 ] concat
%I
[
(3)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 448 1461 a Fh(Exer)n(cise)448 1623 y Fg(12.)29
b(Sho)n(w)23 b(that)h(the)g(string)g Ff(abb)e Fg(is)i(not)g(accepted)h
(by)f(the)g(machine)g Ff(P)p Fg(.)448 1916 y Fi(8)120
b(Building)31 b(NF)-11 b(As)30 b(fr)n(om)f(r)n(egular)i(expr)n(essions)
448 2123 y Fg(F)o(or)e(each)i(re)o(gular)g(e)o(xpression)h(it)e(is)f
(possible)j(to)e(b)n(uild)h(an)f(NF)-7 b(A)28 b(which)i(accepts)i(e)o
(xactly)448 2236 y(those)25 b(strings)g(matching)g(the)f(e)o
(xpression.)31 b(The)23 b(machines)j(are)d(illustrated)k(in)c(Figure)h
(3.)589 2349 y(The)30 b(construction)j(is)d(by)g(induction)i(o)o(v)o
(er)e(the)g(structure)i(of)d(the)h(re)o(gular)h(e)o(xpression:)448
2462 y(the)i(machines)h(for)f(an)f(character)j(and)e(for)g
Fc(")f Fg(are)h(gi)n(v)o(en)g(outright,)j(and)d(for)g(comple)o(x)g(e)o
(x-)448 2575 y(pressions,)j(the)c(machines)h(are)e(b)n(uilt)i(from)e
(the)h(machines)h(representing)h(the)e(parts.)53 b(It)31
b(is)448 2688 y(straightforw)o(ard)d(to)23 b(justify)i(the)f
(construction.)448 2875 y Ff(\(e|f\))44 b Fg(An)o(y)32
b(path)h(through)i Ff(M\(e|f\))30 b Fg(must)i(be)h(either)g(a)f(path)h
(through)i Ff(M\(e\))30 b Fg(or)j(a)f(path)676 2988 y(through)25
b Ff(M\(f\))d Fg(\(with)h Fc(")h Fg(at)f(the)h(start)g(and)g(end.)448
3176 y Ff(ef)45 b Fg(An)o(y)39 b(path)i(through)h Ff(M\(ef\))c
Fg(will)h(be)h(a)g(path)g(through)i Ff(M\(e\))c Fg(follo)n(wed)j(by)f
(a)g(path)676 3289 y(through)25 b Ff(M\(f\))p Fg(.)448
3476 y Ff(e*)45 b Fg(P)o(aths)34 b(through)j Ff(M\(e*\))32
b Fg(are)i(of)h(tw)o(o)f(sorts;)40 b(the)35 b(\002rst)f(is)g(simply)h
(an)f Fc(")p Fg(,)j(others)e(be)o(gin)676 3589 y(with)23
b(a)f(path)i(through)i Ff(M\(e\))p Fg(,)21 b(and)i(continue)j(with)d(a)
g(path)h(through)h Ff(M\(e*\))p Fg(.)h(In)d(other)676
3702 y(w)o(ords,)g(paths)i(through)g Ff(M\(e*\))d Fg(go)h(through)j
Ff(M\(e\))c Fg(zero)i(or)f(more)h(times.)448 3890 y(The)f(machine)i
(for)f(the)g(pattern)h Ff(\(ab|ba\)*)20 b Fg(is)k(gi)n(v)o(en)g(by)1245
4839 y @beginspecial 80 @llx 496 @lly 336 @urx 649 @ury
1700 @rwi @setspecial
%%BeginDocument: pic6.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 80 496 336 649
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I
136 454 8 8 Elli
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 128 346 ] concat
%I
136 454 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 128 442 ] concat
%I
136 454 8 8 Elli
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 64 0 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 128 346 ] concat
%I
136 454 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 128 442 ] concat
%I
136 454 8 8 Elli
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 128 0 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 128 346 ] concat
%I
136 454 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 128 442 ] concat
%I
136 454 8 8 Elli
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 296 394 ] concat
%I
136 454 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 352 394 ] concat
%I
136 454 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 32 394 ] concat
%I
136 454 8 8 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I
88 454 128 454 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I
184 502 232 502 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I
248 502 296 502 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I
184 406 232 406 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I
248 406 296 406 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I
352 454 392 454 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I
40 454 72 454 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I
142 458 169 498 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I
141 449 169 409 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I
310 496 339 458 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I
310 410 340 447 Line
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I 5
344 462
344 550
240 550
136 550
136 462
5 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 88 394 ] concat
%I 5
80 446
80 366
240 366
400 366
400 446
5 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 288 917 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 352 917 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 288 821 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 352 821 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 199 869 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 335 749 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 327 957 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 463 869 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 399 877 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 399 829 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 263 877 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 263 837 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 120 941 ] concat
%I
[
(M\(\(ab|ba\)*\))
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 1897 5225 a(18)p eop
%%Page: 19 19
19 18 bop 773 4594 a @beginspecial 49 @llx 128 @lly 376
@urx 688 @ury 2834 @rwi @setspecial
%%BeginDocument: pic3.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 49 128 376 688
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 239 ] concat
%I
195 601 120 48 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 245 215 ] concat
%I
107 625 8 8 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 53 215 ] concat
%I
107 625 8 8 Elli
End

End %I eop

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 111 ] concat
%I
195 601 120 48 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 53 87 ] concat
%I
107 625 8 8 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 245 87 ] concat
%I
107 625 8 8 Elli
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 85 223 ] concat
%I
35 553 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 357 223 ] concat
%I
35 553 8 8 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I
59 545 99 609 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I
59 545 99 481 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I
291 609 331 545 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I
291 481 331 545 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I
19 545 59 545 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 240 845 ] concat
%I
[
(M\(e\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 240 717 ] concat
%I
[
(M\(f\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 96 901 ] concat
%I
[
(M\(e|f\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 127 821 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 127 741 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 391 821 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 391 741 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 299 1014 ] concat
%I
[
(M\(a\))
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -325 441 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 223 ] concat
%I
611 297 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 189 223 ] concat
%I
611 297 8 8 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I
579 289 611 289 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I
611 289 739 289 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 728 541 ] concat
%I
[
(a)
] Text
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -467 663 ] concat
%I
611 297 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 -339 663 ] concat
%I
611 297 8 8 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -467 671 ] concat
%I
579 289 611 289 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -467 671 ] concat
%I
611 289 739 289 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 0 1 207 981 ] concat
%I
[
(3)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -528 496 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 624 509 ] concat
%I
[
(M\()
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 647 509 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 648 509 ] concat
%I
[
(\))
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -20.9998 31.5001 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 261 -81 ] concat
%I
195 601 120 48 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 253 -105 ] concat
%I
107 625 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 445 -105 ] concat
%I
107 625 8 8 Elli
End

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 8 -192 ] concat

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 111 ] concat
%I
195 601 120 48 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 53 87 ] concat
%I
107 625 8 8 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 245 87 ] concat
%I
107 625 8 8 Elli
End

End %I eop

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I
43 289 107 289 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 248 525 ] concat
%I
[
(M\(e\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 448 525 ] concat
%I
[
(M\(f\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 96 605 ] concat
%I
[
(M\(ef\))
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -360 -504 ] concat

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 400 -64 ] concat

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 239 ] concat
%I
195 601 120 48 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 245 215 ] concat
%I
107 625 8 8 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 53 215 ] concat
%I
107 625 8 8 Elli
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I
443 545 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 61 231 ] concat
%I
747 545 8 8 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I
403 545 435 545 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I
451 545 491 545 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I
699 545 739 545 Line
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I 5
443 545
443 433
595 433
747 433
747 545
5 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 231 ] concat
%I 5
691 545
691 657
595 657
499 657
499 545
5 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 640 781 ] concat
%I
[
(M\(e\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 488 901 ] concat
%I
[
(M\(e*\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 655 685 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 527 797 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 655 877 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 791 797 ] concat
%I
[
(3)
] Text
End

End %I eop

End %I eop

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 1061 4890 a Fg(Figure)24 b(3:)29 b(Building)c(NF)-7
b(As)22 b(for)i(re)o(gular)h(e)o(xpressions)1897 5225
y(19)p eop
%%Page: 20 20
20 19 bop 448 573 a Fg(The)27 b(Hask)o(ell)g(description)j(of)d(the)g
(construction)j(is)d(gi)n(v)o(en)g(in)g(BuildNf)o(a.)39
b(At)26 b(the)h(top)g(le)n(v)o(el)448 686 y(the)d(function)448
898 y Ff(build)47 b(::)g(Reg)g(->)g(Nfa)g(Int)448 1111
y Fg(does)25 b(the)e(recursion.)32 b(F)o(or)22 b(the)i(base)g(case,)448
1323 y Ff(build)47 b(\(Literal)e(c\))544 1436 y(=)i(NFA)639
1549 y(\(makeSet)f([0)h(..)g(1]\))639 1662 y(\(sing)g(\(Move)f(0)h(c)h
(1\)\))639 1775 y(0)639 1888 y(\(sing)f(1\))448 2100
y Fg(The)23 b(de\002nition)j(of)d Ff(build)46 b(Epsilon)21
b Fg(is)j(similar)-5 b(.)29 b(In)24 b(the)f(other)i(cases)f(we)f
(de\002ne)448 2313 y Ff(build)47 b(\(Or)g(r1)g(r2\))142
b(=)48 b(m)p 1505 2313 29 4 v 34 w(or)142 b(\(build)46
b(r1\))h(\(build)f(r2\))448 2426 y(build)h(\(Then)f(r1)h(r2\))g(=)h(m)p
1505 2426 V 34 w(then)e(\(build)g(r1\))h(\(build)f(r2\))448
2539 y(build)h(\(Star)f(r\))238 b(=)48 b(m)p 1505 2539
V 34 w(star)e(\(build)g(r\))448 2751 y Fg(in)27 b(which)h(the)g
(functions)h Ff(m)p 1350 2751 V 34 w(or)d Fg(and)i(so)f(on)h(b)n(uild)g
(the)g(machines)h(from)e(their)h(components)448 2864
y(as)c(illustrated)i(in)e(Figure)g(3.)589 2977 y(W)-7
b(e)32 b(mak)o(e)g(certain)i(assumptions)h(about)e(the)g(NF)-7
b(As)31 b(we)g(b)n(uild.)56 b(W)-7 b(e)31 b(tak)o(e)i(it)f(that)h(the)
448 3090 y(states)24 b(are)e(numbered)i(from)f Ff(0)p
Fg(,)e(with)h(the)h(\002nal)f(state)h(ha)n(ving)h(the)f(highest)h
(number)-5 b(.)29 b(Putting)448 3203 y(the)g(machines)g(together)h
(will)e(in)l(v)n(olv)o(e)i(adding)g(v)n(arious)g(ne)n(w)d(states)i(and)
g(transitions,)j(and)448 3316 y(renumbering)h(the)c(states)i(and)f(mo)o
(v)o(es)f(in)h(the)f(constituent)k(machines.)48 b(The)29
b(de\002nition)i(of)448 3429 y Ff(m)p 502 3429 V 34 w(or)22
b Fg(is)g(gi)n(v)o(en)i(in)e(Figure)i(4,)e(and)h(the)g(other)h
(functions)h(are)e(de\002ned)h(in)f(a)f(similar)h(w)o(ay)-6
b(.)29 b(The)448 3542 y(function)d Ff(renumber)21 b Fg(renumbers)k
(states)g(and)f Ff(renumber)p 2354 3542 V 32 w(move)e
Fg(renumbers)j(mo)o(v)o(es.)448 3834 y Fi(9)120 b(Deterministic)30
b(machines)448 4041 y Fg(A)23 b(deterministic)j(\002nite)e(automaton)h
(is)f(an)f(NF)-7 b(A)22 b(which)585 4229 y Fd(\017)46
b Fg(contains)25 b(no)f Fc(")p Fg(-mo)o(v)o(es,)g(and)585
4417 y Fd(\017)46 b Fg(has)31 b(at)f(most)g(one)h(arro)n(w)g(labelled)h
(with)f(a)f(particular)j(symbol)f(lea)n(ving)g(an)o(y)f(gi)n(v)o(en)676
4530 y(state.)448 4717 y(The)25 b(ef)n(fect)h(of)g(this)f(is)h(to)f
(mak)o(e)g(operation)j(of)d(the)h(machine)h(deterministic)h(\226)d(at)g
(an)o(y)g(stage)448 4830 y(there)34 b(is)f(at)g(most)g(one)g(possible)j
(mo)o(v)o(e)c(to)h(mak)o(e,)i(and)f(so)f(after)h(reading)g(a)f
(sequence)i(of)448 4943 y(characters,)26 b(the)e(machine)h(can)f(be)f
(in)h(one)g(state)g(at)f(most.)1897 5225 y(20)p eop
%%Page: 21 21
21 20 bop 448 1470 a Ff(m)p 502 1470 29 4 v 34 w(or)48
b(::)f(Nfa)g(Int)g(->)g(Nfa)g(Int)g(->)g(Nfa)g(Int)448
1696 y(m)p 502 1696 V 34 w(or)h(\(NFA)e(states1)g(moves1)g(start1)g
(finish1\))687 1809 y(\(NFA)h(states2)e(moves2)h(start2)h(finish2\))544
2035 y(=)g(NFA)639 2147 y(\(states1')e(`union`)h(states2')g(`union`)g
(newstates\))639 2260 y(\(moves1')g(`union`)g(moves2')f(`union`)h
(newmoves\))639 2373 y(0)639 2486 y(\(sing)h(\(m1+m2+1\)\))639
2712 y(where)639 2825 y(m1)g(=)h(card)e(states1)639 2938
y(m2)h(=)h(card)e(states2)639 3051 y(states1')g(=)h(mapSet)f
(\(renumber)g(1\))h(states1)639 3164 y(states2')f(=)h(mapSet)f
(\(renumber)g(\(m1+1\)\))f(states2)639 3277 y(newstates)g(=)j(makeSet)e
([0,\(m1+m2+1\)])639 3389 y(moves1')94 b(=)47 b(mapSet)f(\(renumber)p
1936 3389 V 32 w(move)h(1\))g(moves1)639 3502 y(moves2')94
b(=)47 b(mapSet)f(\(renumber)p 1936 3502 V 32 w(move)h(\(m1+1\)\))f
(moves2)639 3615 y(newmoves)g(=)h(makeSet)f([)h(Emove)g(0)g(1)h(,)f
(Emove)g(0)g(\(m1+1\))f(,)1546 3728 y(Emove)g(m1)i(\(m1+m2+1\))d(,)i
(Emove)g(\(m1+m2\))e(\(m1+m2+1\))h(])1128 4024 y Fg(Figure)24
b(4:)29 b(The)23 b(de\002nition)i(of)f(the)f(function)j
Ff(m)p 2634 4024 V 34 w(or)1897 5225 y Fg(21)p eop
%%Page: 22 22
22 21 bop 589 573 a Fg(Implementing)26 b(a)d(machine)i(of)e(this)h
(sort)g(is)f(much)h(simpler)g(than)h(for)e(an)h(general)h(NF)-7
b(A:)448 686 y(we)35 b(only)h(ha)n(v)o(e)g(to)f(k)o(eep)h(track)g(of)f
(a)g(single)i(position.)66 b(Is)35 b(there)h(a)f(general)i(mechanism)
448 799 y(for)23 b(\002nding)g(a)g(DF)-7 b(A)20 b(corresponding)27
b(to)c(a)f(re)o(gular)i(e)o(xpression?)31 b(In)23 b(f)o(act,)g(there)g
(is)f(a)h(general)448 912 y(technique)h(for)d(transforming)i(an)e
(arbitrary)i(NF)-7 b(A)19 b(into)j(a)e(DF)-7 b(A,)19
b(and)i(this)g(we)f(e)o(xamine)i(no)n(w)-6 b(.)589 1024
y(The)23 b(con)l(v)o(ersion)j(of)d(an)g(NF)-7 b(A)21
b(into)i(a)g(DF)-7 b(A)21 b(is)i(based)h(on)f(the)g(implementation)j
(gi)n(v)o(en)d(in)448 1137 y(Section)29 b(6.)41 b(The)28
b(main)g(idea)g(there)h(is)f(to)g(k)o(eep)g(track)h(of)f(a)f
Fe(set)j Fg(of)e(states,)i(representing)h(all)448 1250
y(the)23 b(possible)i(positions)g(after)e(reading)h(a)e(certain)j
(amount)e(of)f(input.)30 b(This)22 b(set)h(itself)g(can)g(be)448
1363 y(thought)31 b(of)e(as)g(a)g(state)g(of)g(another)i(machine,)g
(which)f(will)e(be)h Fe(deterministic)p Fg(:)43 b(the)29
b(mo)o(v)o(es)448 1476 y(from)24 b(one)g Fe(set)h Fg(to)f(another)h
(are)f(completely)h(deterministic.)589 1589 y(W)-7 b(e)26
b(sho)n(w)g(ho)n(w)g(the)g(con)l(v)o(ersion)j(w)o(orks)e(with)f(the)h
(machine)g Ff(P)p Fg(.)e(The)h(start)h(state)g(of)f(the)448
1702 y(machine)f(will)e(be)h(the)g(closure)h(of)e(the)h(set)g
Fd(f)p Ff(0)p Fd(g)p Fg(,)f(that)h(is)589 1815 y Ff(A)48
b(=)f Fd(f)p Ff(0,1,2,4)p Fd(g)448 1928 y Fg(No)n(w)-6
b(,)24 b(the)g(construction)29 b(proceeds)d(by)f(\002nding)g(the)g
(sets)g(accessible)i(from)e Ff(A)e Fg(by)i(mo)o(v)o(es)f(on)448
2041 y Ff(a)31 b Fg(and)h(on)g Ff(b)e Fg(\226)i(all)f(the)h(characters)
i(in)e(the)g Fe(alphabet)j Fg(of)d(the)g(machine)h Ff(P)p
Fg(.)d(These)i(sets)g(are)448 2154 y(states)d(of)f(the)f(ne)n(w)g
(machine;)k(we)c(then)i(repeat)f(the)g(construction)j(with)d(these)g
(ne)n(w)f(states,)448 2267 y(until)e(no)e(more)h(states)h(are)e
(produced)j(by)e(the)g(construction.)589 2379 y(From)g
Ff(A)f Fg(on)i(the)g(symbol)g Ff(a)e Fg(we)h(can)h(mo)o(v)o(e)f(to)g
Ff(3)f Fg(from)i Ff(2)p Fg(.)30 b(Closing)c(under)f Fc(")p
Fg(-mo)o(v)o(es)g(we)448 2492 y(ha)n(v)o(e)g(the)e(set)h
Fd(f)p Ff(1,2,3,4,6,7)p Fd(g)p Fg(,)c(which)k(we)f(call)h
Ff(B)589 2605 y(B)48 b(=)f Fd(f)p Ff(1,2,3,4,6,7)p Fd(g)589
2734 y Ff(A)734 2684 y(a)685 2734 y Fd(\000)-16 b(!)48
b Ff(B)448 2847 y Fg(In)24 b(a)f(similar)h(w)o(ay)-6
b(,)23 b(from)h Ff(A)e Fg(on)i Ff(b)e Fg(we)h(ha)n(v)o(e)589
2959 y Ff(C)48 b(=)f Fd(f)p Ff(1,2,4,5,6,7)p Fd(g)589
3104 y Ff(A)734 3054 y(b)685 3104 y Fd(\000)-16 b(!)48
b Ff(C)448 3217 y Fg(Our)23 b(ne)n(w)g(machine)i(so)f(f)o(ar)f(looks)i
(lik)o(e)1567 4238 y @beginspecial 80 @llx 512 @lly 173
@urx 628 @ury 930 @rwi @setspecial
%%BeginDocument: pic7a.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 80 512 173 628
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
88 635 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 189 ] concat
%I
160 723 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 53 ] concat
%I
160 723 16 16 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 160 845 ] concat
%I
[
(A)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 232 917 ] concat
%I
[
(B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 232 781 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
40 635 72 635 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 192 893 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 195 803 ] concat
%I
[
(b)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 589 4396 a(W)-7 b(e)23 b(no)n(w)g(ha)n(v)o(e)h(to)g(see)g
(what)f(is)g(accessible)k(from)c Ff(B)g Fg(and)h Ff(C)p
Fg(.)e(First)h Ff(B)p Fg(.)589 4509 y Ff(D)48 b(=)f Fd(f)p
Ff(1,2,3,4,6,7,8)p Fd(g)589 4638 y Ff(B)734 4588 y(a)685
4638 y Fd(\000)-16 b(!)48 b Ff(D)448 4751 y Fg(which)20
b(is)e(another)j(ne)n(w)d(state.)28 b(The)18 b(process)j(of)e
(generating)i(ne)n(w)e(states)h(must)e(stop,)j(as)d(there)448
4863 y(is)30 b(only)g(a)g(\002nite)f(number)i(of)f(sets)g(of)g(states)h
(to)e(choose)i(from)f Fd(f)p Ff(0,1,2,3,4,5,6,7,8)p Fd(g)p
Fg(.)448 4976 y(What)24 b(happens)i(with)d(a)g Ff(b)f
Fg(mo)o(v)o(e)h(from)h Ff(B)p Fg(?)1897 5225 y(22)p eop
%%Page: 23 23
23 22 bop 589 595 a Ff(B)734 545 y(b)685 595 y Fd(\000)-16
b(!)48 b Ff(C)448 708 y Fg(This)24 b(gi)n(v)o(es)g(the)f(partial)i
(machine)1379 1745 y @beginspecial 80 @llx 512 @lly 218
@urx 628 @ury 1380 @rwi @setspecial
%%BeginDocument: pic7b.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 80 512 218 628
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 79 205 ] concat
%I
88 635 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 189 ] concat
%I
160 723 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 53 ] concat
%I
160 723 16 16 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 160 845 ] concat
%I
[
(A)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 232 917 ] concat
%I
[
(B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 232 781 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
40 635 72 635 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 192 893 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 195 803 ] concat
%I
[
(b)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 218 204 ] concat
%I
88 635 16 16 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
160 691 160 587 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
172 695 219 648 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 281 900 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 251 853 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 301 846 ] concat
%I
[
(D)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 448 1899 a(Similarly)-6 b(,)589 2024 y Ff(C)734
1975 y(a)685 2024 y Fd(\000)-16 b(!)48 b Ff(D)589 2147
y(C)734 2097 y(b)685 2147 y Fd(\000)-16 b(!)48 b Ff(C)589
2259 y(D)734 2210 y(a)685 2259 y Fd(\000)-16 b(!)48 b
Ff(D)589 2382 y(D)734 2332 y(b)685 2382 y Fd(\000)-16
b(!)48 b Ff(C)448 2495 y Fg(which)24 b(completes)i(the)d(construction)
28 b(of)23 b(the)h(DF)-7 b(A)1262 3764 y @beginspecial
80 @llx 484 @lly 246 @urx 628 @ury 1660 @rwi @setspecial
%%BeginDocument: pic7c.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 80 484 246 628
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 79 205 ] concat
%I
88 635 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 189 ] concat
%I
160 723 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 53 ] concat
%I
160 723 16 16 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 160 845 ] concat
%I
[
(A)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 232 917 ] concat
%I
[
(B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 232 781 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
40 635 72 635 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 192 893 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 195 803 ] concat
%I
[
(b)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 218 204 ] concat
%I
88 635 16 16 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
160 691 160 587 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
172 695 219 648 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 281 900 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 251 853 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 301 846 ] concat
%I
[
(D)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
176 579 216 619 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 262 817 ] concat
%I
[
(a)
] Text
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 80 205 ] concat
%I 5
148 560
136 530
161 514
183 531
170 558
5 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 80 206 ] concat
%I 4
227 617
228 586
199 568
176 566
4 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 80 205 ] concat
%I 5
236 646
258 656
284 637
264 620
240 626
5 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 297 780 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 330 874 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 208 756 ] concat
%I
[
(b)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 448 3919 a(Which)31 b(of)f(the)g(ne)n(w)f(states)i(is)f
(\002nal?)48 b(One)30 b(of)g(these)h(sets)f(represents)j(an)d
(accepting)i(state)448 4032 y(e)o(xactly)24 b(when)e(it)h(contains)h(a)
e(\002nal)g(state)h(of)g(the)f(original)i(machine.)30
b(F)o(or)21 b Ff(P)h Fg(this)h(is)f Ff(8)p Fg(,)f(which)448
4145 y(is)h(contained)i(in)d(the)h(set)g Ff(D)f Fg(only)-6
b(.)29 b(In)21 b(general)i(there)g(can)f(be)f(more)h(than)g(one)g
(accepting)i(state)448 4257 y(for)30 b(a)f(machine.)47
b(\(This)30 b(need)g(not)f(be)h(true)g(for)f(NF)-7 b(As,)29
b(since)i(we)d(can)i(al)o(w)o(ays)g(add)g(a)f(ne)n(w)448
4370 y(\002nal)24 b(state)g(to)f(which)h(each)h(of)e(the)h(originals)i
(is)d(link)o(ed)i(by)f(an)f Fc(")p Fg(-mo)o(v)o(e.\))448
4656 y Fi(10)119 b(T)-9 b(ransf)m(orming)30 b(NF)-11
b(As)30 b(to)g(DF)-11 b(As)448 4863 y Fg(The)29 b(Hask)o(ell)h(code)g
(to)f(co)o(v)o(ert)h(an)f(NF)-7 b(A)28 b(to)h(a)f(DF)-7
b(A)28 b(is)h(found)h(in)f(the)h(module)g Ff(NfaToDfa)p
Fg(,)448 4976 y(and)24 b(the)g(main)g(function)h(is)1897
5225 y(23)p eop
%%Page: 24 24
24 23 bop 448 573 a Ff(make)p 646 573 29 4 v 34 w(deterministic)44
b(::)j(Nfa)g(Int)g(->)g(Nfa)g(Int)448 799 y(make)p 646
799 V 34 w(deterministic)d(=)j(number)f(.)i(make)p 2065
799 V 33 w(deter)448 976 y Fg(A)31 b(deterministic)k(v)o(ersion)e(of)f
(an)g(NF)-7 b(A)30 b(with)i(numeric)h(states)g(is)f(de\002ned)h(in)f
(tw)o(o)f(stages,)448 1089 y(using)448 1266 y Ff(make)p
646 1266 V 34 w(deter)46 b(::)h(Nfa)g(Int)g(->)g(Nfa)g(\(Set)g(Int\))
448 1492 y(number)f(::)i(Nfa)e(\(Set)h(Int\))g(->)g(Nfa)g(Int)448
1670 y(make)p 646 1670 V 34 w(deter)21 b Fg(does)j(the)f(con)l(v)o
(ersion)k(to)c(the)h(deterministic)i(automaton)f(with)e(sets)h(of)f
(num-)448 1783 y(bers)33 b(as)g(states,)i Ff(number)c
Fg(replaces)j(sets)f(of)f(numbers)i(by)f(numbers)h(\(rather)g(than)f
(capital)448 1896 y(letters,)24 b(as)e(w)o(as)g(done)i(abo)o(v)o(e\).)
29 b(States)23 b(are)f(replaced)j(by)d(their)h(position)i(in)d(a)g
(list)h(of)f(states)i(\226)448 2008 y(see)g(the)g(\002le)f(for)h(more)f
(details.)589 2121 y(The)h(function)h Ff(make)p 1277
2121 V 34 w(deter)c Fg(is)i(a)g(special)j(case)e(of)f(the)h(function)
448 2299 y Ff(deterministic)44 b(::)k(Nfa)f(Int)f(->)i([Char])e(->)h
(Nfa)g(\(Set)f(Int\))448 2525 y(make)p 646 2525 V 34
w(deter)g(mach)h(=)g(deterministic)d(mach)j(\(alphabet)e(mach\))448
2702 y Fg(The)24 b(process)j(of)d(adding)i(state)f(sets)g(is)g
(repeated)h(until)g(no)e(more)h(sets)g(are)f(added.)33
b(This)24 b(is)h(a)448 2815 y(v)o(ersion)f(of)e(taking)i(a)e(limit,)g
(gi)n(v)o(en)h(by)f(the)g Ff(nfa)p 1974 2815 V 34 w(limit)e
Fg(function,)k(which)f(acts)g(as)f(the)g(usual)448 2928
y(limit)i(function,)h(e)o(xcept)g(that)f(it)f(checks)i(for)f(equality)i
(of)d(NF)-7 b(As)22 b(as)i(collections)i(of)e(sets.)448
3105 y Ff(deterministic)44 b(mach)j(alpha)544 3218 y(=)g(nfa_limit)e
(\(addstep)h(mach)h(alpha\))f(startmach)639 3331 y(where)639
3444 y(startmach)f(=)j(NFA)1212 3557 y(\(sing)e(starter\))1212
3670 y(empty)1212 3783 y(starter)1212 3896 y(finish)639
4009 y(starter)g(=)h(closure)f(mach)h(\(sing)f(start\))639
4121 y(finish)735 4234 y(|)h(\(term)f(`inter`)g(starter\))g(==)h(empty)
237 b(=)48 b(empty)735 4347 y(|)f(otherwise)1286 b(=)48
b(sing)e(starter)639 4460 y(\(NFA)h(sts)g(mvs)g(start)f(term\))g(=)i
(mach)448 4638 y Fg(The)24 b(start)h(machine,)h Ff(startmach)p
Fg(,)21 b(consists)27 b(of)d(a)g(single)i(state,)f(the)g
Fc(")p Fg(-closure)i(of)d(the)h(start)448 4751 y(state)30
b(of)e(the)h(original)i(machine.)45 b Ff(addstep)h(mach)g(alpha)27
b Fg(tak)o(es)i(a)g(partially)h(b)n(uilt)g(DF)-7 b(A)448
4863 y(and)21 b(adds)h(the)f(state)g(sets)h(of)e Ff(mach)f
Fg(accessible)k(by)e(a)f(single)i(mo)o(v)o(e)f(on)f(an)o(y)h(of)g(the)g
(characters)448 4976 y(in)j Ff(alpha)p Fg(,)d(the)j(alphabet)h(of)f
Ff(mach)p Fg(.)1897 5225 y(24)p eop
%%Page: 25 25
25 24 bop 448 573 a Ff(addstep)46 b(::)h(Nfa)g(Int)g(->)g([Char])f(->)i
(Nfa)e(\(Set)h(Int\))g(->)g(Nfa)g(\(Set)f(Int\))448 799
y(addstep)g(mach)h(alpha)f(dfa)544 912 y(=)h(add)p 789
912 29 4 v 34 w(aux)g(mach)f(alpha)h(dfa)g(\(flatten)e(states\))639
1024 y(where)639 1137 y(\(NFA)i(states)f(m)h(s)h(f\))f(=)g(dfa)639
1250 y(add)p 789 1250 V 34 w(aux)g(mach)f(alpha)h(dfa)g([])g(=)g(dfa)
639 1363 y(add)p 789 1363 V 34 w(aux)g(mach)f(alpha)h(dfa)g
(\(st:rest\))830 1476 y(=)h(add)p 1076 1476 V 33 w(aux)f(mach)g(alpha)f
(\(addmoves)f(mach)i(st)g(alpha)f(dfa\))h(rest)448 1664
y Fg(This)25 b(in)l(v)n(olv)o(es)j(iterating)g(o)o(v)o(er)d(the)h
(state)g(sets)g(in)f(the)g(partially)j(b)n(uilt)e(DF)-7
b(A,)24 b(which)h(is)g(done)448 1777 y(using)31 b Ff(addmoves)p
Fg(.)42 b Ff(addmoves)j(mach)i(x)h(alpha)e(dfa)27 b Fg(will)i(add)h(to)
f Ff(dfa)e Fg(all)i(the)g(mo)o(v)o(es)448 1890 y(from)24
b(state)g(set)g Ff(x)e Fg(o)o(v)o(er)i(the)g(alphabet)h
Ff(alpha)p Fg(.)448 2077 y Ff(addmoves)46 b(::)h(Nfa)g(Int)g(->)g(Set)g
(Int)g(->)g([Char])f(->)1021 2190 y(Nfa)h(\(Set)g(Int\))f(->)h(Nfa)g
(\(Set)g(Int\))448 2416 y(addmoves)f(mach)g(x)i([])f(dfa)190
b(=)48 b(dfa)448 2642 y(addmoves)e(mach)g(x)i(\(c:r\))e(dfa)544
2755 y(=)h(addmoves)f(mach)g(x)i(r)f(\(addmove)f(mach)g(x)i(c)f(dfa\))
448 2942 y Fg(In)26 b(turn,)g Ff(addmoves)d Fg(iterates)k(along)g(the)f
(alphabet,)i(using)f Ff(addmove)p Fg(.)32 b Ff(addmove)46
b(mach)g(x)448 3055 y(c)i(dfa)22 b Fg(will)h(add)h(to)f
Ff(dfa)f Fg(the)i(mo)o(v)o(es)f(from)h(state)g(set)g
Ff(x)e Fg(on)i(character)i Ff(c)p Fg(.)448 3243 y Ff(addmove)46
b(::)h(Nfa)g(Int)g(->)g(Set)g(Int)g(->)g(Char)g(->)973
3356 y(Nfa)g(\(Set)g(Int\))f(->)i(Nfa)f(\(Set)f(Int\))448
3582 y(addmove)g(mach)h(x)g(c)h(\(NFA)e(states)g(moves)h(start)f
(finish\))544 3694 y(=)h(NFA)g(states')f(moves')g(start)g(finish')639
3807 y(where)639 3920 y(states')g(=)h(states)g(`union`)e(\(sing)i
(new\))639 4033 y(moves')94 b(=)47 b(moves)95 b(`union`)45
b(\(sing)i(\(Move)f(x)i(c)f(new\)\))639 4146 y(finish')687
4259 y(|)g(empty)g(/=)g(\(term)f(`inter`)g(new\))190
b(=)47 b(finish)f(`union`)g(\(sing)h(new\))687 4372 y(|)g(otherwise)
1048 b(=)47 b(finish)639 4485 y(new)g(=)h(onetrans)d(mach)i(c)g(x)639
4598 y(\(NFA)g(s)g(m)h(q)f(term\))g(=)g(mach)448 4785
y Fg(The)26 b(ne)n(w)f(state)i(set)f(added)h(by)f Ff(addmove)d
Fg(is)j(de\002ned)g(using)i(the)e Ff(onetrans)d Fg(function)28
b(\002rst)448 4898 y(de\002ned)d(in)e(the)h(simulation)i(of)d(the)h(NF)
-7 b(A.)1897 5225 y(25)p eop
%%Page: 26 26
26 25 bop 448 573 a Fi(11)119 b(Minimising)31 b(a)f(DF)-11
b(A)448 780 y Fg(In)23 b(b)n(uilding)j(a)d(DF)-7 b(A,)21
b(we)i(ha)n(v)o(e)h(produced)h(a)e(machine)h(which)g(cam)f(be)g
(implemented)i(more)448 893 y(ef)n(\002ciently)-6 b(.)38
b(W)-7 b(e)25 b(might,)i(ho)n(we)n(v)o(er)l(,)f(ha)n(v)o(e)h(more)f
(states)h(in)f(the)g(DF)-7 b(A)24 b(than)j(necessary)-6
b(.)38 b(This)448 1006 y(section)23 b(sho)n(ws)e(ho)n(w)g(we)f(can)h
Fe(optimise)i Fg(a)d(DF)-7 b(A)20 b(so)h(that)g(it)g(contains)i(the)f
(minimum)e(number)448 1119 y(of)33 b(states)g(to)f(perform)i(its)e
(function)j(of)d(recognising)j(the)e(strings)h(matching)g(a)e
(particular)448 1231 y(re)o(gular)25 b(e)o(xpression.)589
1344 y(T)-7 b(w)o(o)33 b(states)j Ff(m)d Fg(and)i Ff(n)e
Fg(in)h(a)g(DF)-7 b(A)33 b(are)h Fe(distinguishable)39
b Fg(if)34 b(we)g(can)g(\002nd)g(a)g(string)i Ff(st)448
1457 y Fg(which)24 b(reaches)g(an)f(accepting)j(state)e(from)f
Ff(n)f Fg(b)n(ut)h(not)h(from)f Ff(n)e Fg(\(or)j(vice)f(v)o(ersa\).)30
b(Otherwise,)448 1570 y(the)o(y)e(can)f(be)h(treated)g(as)f(the)h
(same,)f(because)j(no)d(string)h(mak)o(es)g(them)f(beha)n(v)o(e)i(dif)n
(ferently)448 1683 y(\227)23 b(putting)i(it)f(a)f(dif)n(ferent)i(w)o
(ay)-6 b(,)23 b(no)h Fe(e)n(xperiment)j Fg(mak)o(es)d(the)g(tw)o(o)f
(dif)n(ferent.)589 1796 y(Ho)n(w)h(can)i(we)e(tell)h(when)g(tw)o(o)g
(states)h(are)g(dif)n(ferent?)36 b(W)-7 b(e)24 b(start)i(by)f(di)n
(viding)i(the)e(states)448 1909 y(into)g(tw)o(o)f Fe(partitions)p
Fg(:)33 b(one)25 b(contains)h(the)f(accepting)h(states,)g(and)e(the)h
(other)g(the)f(remainder)l(,)448 2022 y(or)g(non-accepting)j(states.)j
(F)o(or)23 b(our)h(e)o(xample,)g(we)f(get)h(the)f(partition)448
2234 y Ff(I:)95 b(D)448 2347 y(II:)47 b(A,B,C)448 2560
y Fg(No)n(w)-6 b(,)23 b(for)h(each)h(set)f(in)g(the)g(partition,)i(we)e
(check)h(whether)g(the)f(elements)h(in)f(the)h(set)f(can)g(be)448
2673 y(further)h(di)n(vided.)30 b(W)-7 b(e)23 b(look)h(at)f(ho)n(w)f
(each)i(of)f(the)h(states)g(in)f(the)h(set)f(beha)n(v)o(es)i
Fe(r)m(elative)g(to)e(the)448 2786 y(pr)m(e)o(vious)i(partition)p
Fg(.)32 b(In)23 b(pictures,)558 3780 y @beginspecial
105 @llx 515 @lly 440 @urx 622 @ury 3350 @rwi @setspecial
%%BeginDocument: pic8.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 105 515 440 622
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 407 781 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 367 893 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 370 803 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 407 781 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 367 893 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 370 803 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 407 781 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 367 893 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 370 803 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 543 846 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 254 204 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 367 893 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 370 803 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 157 844 ] concat
%I
[
(A)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 229 916 ] concat
%I
[
(B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 229 780 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 76.9999 204 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 76.9999 204 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 189 892 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 192 802 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 157 844 ] concat
%I
[
(A)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 229 916 ] concat
%I
[
(B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 229 780 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 76.9999 204 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 76.9999 204 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 189 892 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 192 802 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 157 844 ] concat
%I
[
(A)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 229 916 ] concat
%I
[
(B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 229 780 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 76.9999 204 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 76.9999 204 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 189 892 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 192 802 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 157 844 ] concat
%I
[
(A)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 338 846 ] concat
%I
[
(B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 229 780 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 75.9999 203 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 76.9999 204 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 189 892 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 192 802 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 614 778 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 574 890 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 577 800 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 614 778 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 574 890 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 577 800 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 614 778 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 574 890 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 577 800 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 614 778 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 461 201 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 574 890 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 577 800 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 410 918 ] concat
%I
[
(D)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 617 917 ] concat
%I
[
(D)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 247 915 ] concat
%I
[
(\(II\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 246 780 ] concat
%I
[
(\(II\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 426 782 ] concat
%I
[
(\(II\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 631 779 ] concat
%I
[
(\(II\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 435 917 ] concat
%I
[
(\(I\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 637 917 ] concat
%I
[
(\(I\))
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 448 3968 a(This)h(means)g(that)g(we)e(can)i(re-partition)j
(thus:)448 4180 y Ff(I:)143 b(D)448 4293 y(II:)95 b(A)448
4406 y(III:)47 b(B,C)448 4619 y Fg(W)-7 b(e)25 b(no)n(w)h(repeat)h(the)
f(process,)i(and)e(e)o(xamine)h(the)f(only)h(set)f(which)g(might)g(be)g
(further)i(sub-)448 4731 y(di)n(vided,)d(gi)n(ving)1897
5225 y(26)p eop
%%Page: 27 27
27 26 bop 1058 1373 a @beginspecial 227 @llx 515 @lly
442 @urx 622 @ury 2150 @rwi @setspecial
%%BeginDocument: pic9.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 227 515 442 622
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 407 781 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 367 893 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 370 803 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 407 781 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 367 893 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 370 803 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 407 781 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 367 893 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 370 803 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 543 846 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 254 204 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 255 205 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 367 893 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 370 803 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 338 846 ] concat
%I
[
(B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 614 778 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 574 890 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 577 800 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 614 778 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 574 890 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 577 800 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 614 778 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 574 890 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 577 800 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 614 778 ] concat
%I
[
(C)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 461 201 ] concat
%I
99 647 148 699 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 462 202 ] concat
%I
102 626 149 582 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 574 890 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 577 800 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 410 918 ] concat
%I
[
(D)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 617 917 ] concat
%I
[
(D)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 435 917 ] concat
%I
[
(\(I\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 637 917 ] concat
%I
[
(\(I\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 427 781 ] concat
%I
[
(\(III\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 633 779 ] concat
%I
[
(\(III\))
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 448 1561 a Fg(This)27 b(sho)n(ws)g(that)h(we)e(don')n(t)i
(ha)n(v)o(e)g(to)f(re-partition)j(an)o(y)d(further)l(,)i(and)f(so)f
(that)g(we)f(can)i(stop)448 1674 y(no)n(w)-6 b(,)23 b(and)h(collapse)i
(the)e(tw)o(o)f(states)h Ff(B)f Fg(and)h Ff(C)e Fg(into)j(one,)e(thus:)
1262 2318 y @beginspecial 80 @llx 528 @lly 246 @urx 593
@ury 1660 @rwi @setspecial
%%BeginDocument: pic10.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 80 528 246 593
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 79 205 ] concat
%I
88 635 16 16 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 160 845 ] concat
%I
[
(A)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 80 205 ] concat
%I
40 635 72 635 Line
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 218 204 ] concat
%I
88 635 16 16 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 301 846 ] concat
%I
[
(D)
] Text
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 80 270 ] concat
%I 5
148 560
136 530
161 514
183 531
170 558
5 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 80 205 ] concat
%I 5
236 646
258 656
284 637
264 620
240 626
5 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 239 808 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 330 874 ] concat
%I
[
(a)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 81 116 ] concat
%I
160 723 16 16 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 229 844 ] concat
%I
[
(B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 243 844 ] concat
%I
[
(C)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 202 872 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 276 825 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 272 871 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 198 821 ] concat
%I
[
(b)
] Text
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 6 652 ] concat
%I 3
177 193
200 205
222 196
3 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 6 652 ] concat
%I 3
175 179
201 172
220 181
3 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 6 652 ] concat
%I 3
249 195
266 202
287 195
3 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 6 652 ] concat
%I 3
287 180
265 178
251 183
3 BSpl
%I 1
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 448 2506 a(The)g(Hask)o(ell)i(implementation)h(of)e(this)g
(process)h(is)f(in)f(the)h(module)g Ff(MinimiseDfa)p
Fg(.)448 2668 y Fh(Exer)n(cises)448 2831 y Fg(13.)29
b(F)o(or)23 b(the)h(re)o(gular)g(e)o(xpression)j Ff(b\(ab|ba\)*a)p
Fg(,)19 b(\002nd)k(the)h(corresponding)k(NF)-7 b(A.)448
2994 y(14.)29 b(F)o(or)23 b(the)h(NF)-7 b(A)21 b(of)j(question)i(1,)d
(\002nd)g(the)h(corresponding)j(\(non-optimised\))h(DF)-7
b(A.)448 3157 y(15.)29 b(F)o(or)23 b(the)h(DF)-7 b(A)21
b(of)j(question)i(2,)d(\002nd)g(the)h(optimised)h(DF)-7
b(A.)448 3449 y Fi(12)119 b(Regular)31 b(de\002nitions)448
3656 y Fg(A)f Fe(r)m(e)l(gular)j(de\002nition)g Fg(consists)g(of)e(a)f
(number)i(of)f Fe(named)j Fg(re)o(gular)e(e)o(xpressions.)53
b(W)-7 b(e)30 b(are)448 3769 y(allo)n(wed)i(to)f(use)h(the)f(de\002ned)
h(names)f(on)g(the)h(right-hand)i(sides)e(of)f(de\002nitions)i
Fe(after)h Fg(the)448 3882 y(de\002nition)26 b(of)d(the)h(name.)29
b(F)o(or)22 b(e)o(xample,)448 4095 y Ff(alpha)190 b(->)47
b([a-zA-Z])448 4208 y(digit)190 b(->)47 b([0-9])448 4320
y(alphanum)f(->)h(alpha)f(|)i(digit)448 4433 y(ident)190
b(->)47 b(alpha)f(|)i(alphanum*)448 4546 y(digits)142
b(->)47 b(digit+)448 4659 y(fract)190 b(->)47 b(\(.digits\)?)448
4772 y(num)286 b(->)47 b(digits)f(fract)1897 5225 y Fg(27)p
eop
%%Page: 28 28
28 27 bop 448 573 a Fg(Because)36 b(of)e(the)h(stipulation)i(that)e(a)f
(de\002nition)i(precedes)g(the)f Fe(use)g Fg(of)f(a)g(name,)i(we)e(can)
448 686 y(e)o(xpand)25 b(each)f(right-hand)j(side)d(to)g(a)f(re)o
(gular)h(e)o(xpression)j(in)l(v)n(olving)f(no)e(names.)589
799 y(W)-7 b(e)27 b(can)h(b)n(uild)h(machines)g(to)e(recognise)j
(strings)f(from)e(a)g(number)i(of)e(re)o(gular)i(e)o(xpres-)448
912 y(sions.)h(Suppose)25 b(we)e(ha)n(v)o(e)h(the)g(patterns)448
1124 y Ff(p1:)95 b(a)448 1237 y(p2:)g(abb)448 1350 y(p3:)47
b(a*b*)448 1562 y Fg(W)-7 b(e)23 b(can)h(b)n(uild)h(the)e(three)i(NF)-7
b(As)22 b(thus:)1067 2730 y @beginspecial 61 @llx 593
@lly 274 @urx 723 @ury 2130 @rwi @setspecial
%%BeginDocument: pic11.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 61 593 274 723
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 -46.0001 328 ] concat
%I
275 720 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
91 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 -44.0001 176 ] concat
%I
275 720 16 16 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
35 712 75 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
107 712 155 712 Line
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I 5
82 724
70 750
94 759
111 751
99 724
5 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 195 915 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 144 957 ] concat
%I
[
(a)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
91 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 66 271 ] concat
%I
163 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 82.0001 271 ] concat
%I
227 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 114 263 ] concat
%I
275 720 16 16 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
35 712 75 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
107 712 155 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
187 712 235 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
267 712 315 712 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 381 988 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 181 1004 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 261 1004 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 341 1004 ] concat
%I
[
(b)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
91 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 66 271 ] concat
%I
163 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 82.0001 271 ] concat
%I
227 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 114 263 ] concat
%I
275 720 16 16 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
35 712 75 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
107 712 155 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
187 712 235 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
267 712 315 712 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 224 1054 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 145 990 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 181 1004 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 261 1004 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 341 1004 ] concat
%I
[
(b)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 334 ] concat
%I
91 712 16 16 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 334 ] concat
%I
35 712 75 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 334 ] concat
%I
107 712 155 712 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 146 1053 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 181 1067 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 225 991 ] concat
%I
[
(4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 305 991 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 384 988 ] concat
%I
[
(6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 149 902 ] concat
%I
[
(7)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 225 903 ] concat
%I
[
(8)
] Text
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 138 185 ] concat
%I 5
82 724
70 750
94 759
111 751
99 724
5 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 227 958 ] concat
%I
[
(b)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 448 2918 a(and)i(then)h(the)o(y)e(can)h(be)g(joined)h
(into)f(a)f(single)i(machine,)g(thus)783 4104 y @beginspecial
13 @llx 593 @lly 294 @urx 723 @ury 2810 @rwi @setspecial
%%BeginDocument: pic12.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 13 593 294 723
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 12 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.675677 0 0 0.675677 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 -46.0001 328 ] concat
%I
275 720 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
91 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 -0 -0 1 -44.0001 176 ] concat
%I
275 720 16 16 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I
107 712 155 712 Line
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 61 184 ] concat
%I 5
82 724
70 750
94 759
111 751
99 724
5 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 195 915 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 144 957 ] concat
%I
[
(a)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
91 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 66 271 ] concat
%I
163 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 82.0001 271 ] concat
%I
227 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 114 263 ] concat
%I
275 720 16 16 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
35 712 75 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
107 712 155 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
187 712 235 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
267 712 315 712 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 381 988 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 181 1004 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 261 1004 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 341 1004 ] concat
%I
[
(b)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
91 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 66 271 ] concat
%I
163 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 82.0001 271 ] concat
%I
227 712 16 16 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 114 263 ] concat
%I
275 720 16 16 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
35 712 75 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
107 712 155 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
187 712 235 712 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 271 ] concat
%I
267 712 315 712 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 224 1054 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 145 990 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 181 1004 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 261 1004 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 341 1004 ] concat
%I
[
(b)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 334 ] concat
%I
91 712 16 16 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 58 334 ] concat
%I
107 712 155 712 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 146 1053 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 181 1067 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 225 991 ] concat
%I
[
(4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 305 991 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 384 988 ] concat
%I
[
(6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 149 902 ] concat
%I
[
(7)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 225 903 ] concat
%I
[
(8)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -14 271 ] concat
%I
91 712 16 16 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 6 652 ] concat
%I
80 343 129 388 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 6 652 ] concat
%I
78 316 132 249 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 112 1036 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 116 1000 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -1 0 -0 1 119 955 ] concat
%I
[
(3)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -14 271 ] concat
%I
35 712 75 712 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 74 989 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 255 1057 ] concat
%I
[
(p1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 418 992 ] concat
%I
[
(p2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 259 902 ] concat
%I
[
(p3)
] Text
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 141 183 ] concat
%I 5
82 724
70 750
94 759
111 751
99 724
5 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 229 958 ] concat
%I
[
(b)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 448 4291 a(In)f(using)g(the)g(machine)h(we)e(look)h(for)g
(the)g Fe(long)o(est)j Fg(match)d(against)g(an)o(y)g(of)g(the)f
(patterns:)687 4504 y Ff(0,1,3,7,8\(p3\))448 4617 y(a)191
b(2\(p1\),4,7,8\(p3\))448 4730 y(a)g(7,8\(p3\))448 4842
y(b)g(8\(p3\))448 4955 y(a)g(-)1897 5225 y Fg(28)p eop
%%Page: 29 29
29 28 bop 448 573 a Fg(In)24 b(the)g(e)o(xample,)g(the)f(se)o(gment)i
(of)e Ff(aab)f Fg(matches)j(the)f(pattern)h Ff(p3)p Fg(.)448
736 y Fh(Exer)n(cises)448 898 y Fg(16.)k(Fully)24 b(e)o(xpand)h(the)f
(names)g Ff(digits)d Fg(and)j Ff(num)e Fg(gi)n(v)o(en)i(abo)o(v)o(e.)
448 1061 y(17.)66 b(Build)36 b(a)f(Hask)o(ell)i(program)g(to)e
(recognise)k(strings)e(according)h(to)e(a)f(set)h(of)g(re)o(gular)448
1174 y(de\002nitions,)26 b(as)d(outlined)j(in)d(this)h(section.)448
1467 y Fi(Bibliograph)n(y)448 1674 y Fg([Aho)j Fe(et.)f(al.)p
Fg(])38 b(Aho,)26 b(A.V)-12 b(.,)25 b(Sethi,)i(R.)e(and)i(Ullman,)g
(J.D.,)f Fe(Compiler)o(s:)36 b(Principles,)29 b(T)-8
b(ec)o(h-)448 1786 y(niques)25 b(and)f(T)-8 b(ools)p
Fg(,)24 b(Addison-W)-7 b(esle)o(y)h(,)26 b(Reading,)e(MA,)e(USA,)f
(1986.)448 1949 y([Thompson])30 b(Thompson,)f(S.,)e Fe(Hask)o(ell:)39
b(The)27 b(Cr)o(aft)h(of)f(Functional)j(Pr)l(o)o(gr)o(amming)p
Fg(,)g(sec-)448 2062 y(ond)24 b(edition,)h(Addison-W)-7
b(esle)o(y)h(,)26 b(1999.)1897 5225 y(29)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
